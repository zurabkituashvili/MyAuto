[{"C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\index.tsx":"1","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\App.tsx":"2","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Cards\\Product.tsx":"3","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Cards\\Paginations.tsx":"4","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Header\\Header.tsx":"5","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\DropDown\\DropDown.tsx":"6","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\Manufacturer.tsx":"7","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\CarTypes\\CarTypeContext.tsx":"8","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\Category.tsx":"9","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\CarTypes\\CarTypeComp.tsx":"10","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\ModelInp.tsx":"11","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\PriceFilter.tsx":"12","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\SellType.tsx":"13","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\FilterButton.tsx":"14","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\CombinedFilter.tsx":"15"},{"size":447,"mtime":1685923268132,"results":"16","hashOfConfig":"17"},{"size":7944,"mtime":1688743834623,"results":"18","hashOfConfig":"17"},{"size":40424,"mtime":1688742454219,"results":"19","hashOfConfig":"17"},{"size":5921,"mtime":1688741447963,"results":"20","hashOfConfig":"17"},{"size":13124,"mtime":1688640268675,"results":"21","hashOfConfig":"17"},{"size":5609,"mtime":1688744781580,"results":"22","hashOfConfig":"17"},{"size":6517,"mtime":1687102871377,"results":"23","hashOfConfig":"17"},{"size":2248,"mtime":1688737701193,"results":"24","hashOfConfig":"17"},{"size":4685,"mtime":1688730176440,"results":"25","hashOfConfig":"17"},{"size":14714,"mtime":1688742998244,"results":"26","hashOfConfig":"17"},{"size":4691,"mtime":1687102569747,"results":"27","hashOfConfig":"17"},{"size":1531,"mtime":1686937595696,"results":"28","hashOfConfig":"17"},{"size":4865,"mtime":1688731939797,"results":"29","hashOfConfig":"17"},{"size":7377,"mtime":1688744689870,"results":"30","hashOfConfig":"17"},{"size":2734,"mtime":1688738246782,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"126qxue",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},"C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\index.tsx",[],[],"C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\App.tsx",["87","88"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { CarTypeInterface } from \"./Components/Interfaces/CarTypeInterface\";\nimport CarTypeComp from \"./Components/CarTypes/CarTypeComp\";\nimport CarTypeContext from \"./Components/CarTypes/CarTypeContext\";\nimport { ProductInterface } from \"./Components/Interfaces/ProductInterface\";\nimport { ManufacturerInterface } from \"./Components/Interfaces/ManufacturerInterface\";\nimport { modelInterface } from \"./Components/Interfaces/ModelInterface\";\nimport ModelInp from \"./Components/Filters/ModelInp\";\nimport Manufacturer from \"./Components/Filters/Manufacturer\";\nimport ProductComponent from \"./Components/Cards/Product\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Components/Cards/Pages.css\";\nimport Pagination from \"./Components/Cards/Paginations\";\nimport \"./SearchResults.css\";\nimport \"./Components/Header/Header.css\";\nimport Header from \"./Components/Header/Header\";\nimport SortDropdown from \"./Components/DropDown/DropDown\";\nimport \"./Components/DropDown/Group33738.css\";\nimport Category from \"./Components/Filters/Category\";\nimport PriceFilter from \"./Components/Filters/PriceFilter\";\nimport FilterButton from \"./Components/Filters/FilterButton\";\nimport \"./iphone11/iphone11pro.css\";\nimport SellType from \"./Components/Filters/SellType\";\n\nconst App: React.FC = () => {\n  const [categories, setCategories] = useState<CarTypeInterface[]>([]);\n  const [cartegory, setCartegory] = useState<number>(0);\n  const [chosenCategories, setChosenCategories] = useState<string[]>([]);\n  const [PriceRange, setPriceRange] = useState<[number, number]>([0, 0]);\n\n  const [manArr, setManArr] = useState<ManufacturerInterface[]>([]);\n  const [currentMan, setCurrentMan] = useState<string[]>([]);\n\n  //should get man id and then fetch from\n  const [modelArr, setModelArr] = useState<modelInterface[]>([]);\n  const [chosenModel, setChosen] = useState<string[]>([]);\n  const [products, setProducts] = useState<ProductInterface[]>([]);\n  const [fetchedProductCount, setFetchedProductCount] = useState<number>(0);\n\n  const [wholeProducts, setWholeProducts] = useState<ProductInterface[]>([]);\n\n  const [isHidden, setIsHidden] = useState(true);\n\n  const [sellType,setSellType] = useState(\"\")\n\n  //-------------------------------------------------------//\n  const [currentPage, setCurrentPage] = useState(1);\n  const [visibleProd,setVisible] = useState<ProductInterface[]>([])\n\n  const [filterMethod, setFilterMethod] = useState(\"\");\n  const [sortMethod, setSortMethod] = useState(\"option1\");\n\n  const itemsPerPage = 5;\n\n  const totalPage = Math.ceil(visibleProd.length / itemsPerPage);\n\n  const toggleHidden = () => {\n    setIsHidden(!isHidden);\n  };\n\n  const matchesMediaQuery = (mediaQuery: string) => {\n    if (typeof window !== \"undefined\") {\n      const mql = window.matchMedia(mediaQuery);\n      return mql.matches;\n    }\n    return false;\n  };\n\n  const isSmallScreen = matchesMediaQuery(\n    \"only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3)\"\n  );\n\n  const isDivHidden = isSmallScreen && isHidden;\n\n  const fetchCategories = async (): Promise<void> => {\n    try {\n      const response: Response = await fetch(\n        \"https://api2.myauto.ge/ka/cats/get\"\n      );\n      const data = await response.json();\n      setCategories(data.data);\n    } catch (error) {\n      console.error(\"Error while fetching categories\", error);\n    }\n  };\n\n  const fetchManufacturers = async (): Promise<void> => {\n    try {\n      const response: Response = await fetch(\n        \"https://static.my.ge/myauto/js/mans.json\"\n      );\n      const data = await response.json();\n      setManArr(data);\n    } catch (error) {\n      console.error(\"Error while fetching categories\", error);\n    }\n  };\n  const fetchProducts = async (): Promise<void> => {\n    try {\n      let page = 1;\n      let hasMorePages = true;\n      let fetchedCount = 0;\n\n      while (hasMorePages && page <= 20) {\n        const response: Response = await fetch(\n          `https://api2.myauto.ge/ka/products/?Page=${page}`\n        );\n        const data = await response.json();\n\n        if (data.data.items.length > 0) {\n          setProducts((prevProducts) => [...prevProducts, ...data.data.items]);\n          setVisible((prevProducts) => [...prevProducts, ...data.data.items])\n          setWholeProducts((prevProducs) => [\n            ...prevProducs,\n            ...data.data.items,\n          ]);\n          fetchedCount += data.data.items.length;\n          setFetchedProductCount(fetchedCount);\n          page++;\n        } else {\n          hasMorePages = false;\n        }\n      }\n    } catch (error) {\n      console.error(\"Error while fetching products\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCategories();\n    fetchManufacturers();\n    \n  }, []);\n\n  const productsToDisplay = visibleProd.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  const handlePageClick = (pageNum: number) => setCurrentPage(pageNum);\n\n  if (wholeProducts.length < 300) {\n    return <div>LOADING</div>;\n  } else {\n    return (\n      <div className=\"searchResult\">\n        <CarTypeContext.Provider\n          value={{\n            sellType,\n            setSellType,\n            categories,\n            setCategories,\n            cartegory,\n            setCartegory,\n            manArr,\n            setManArr,\n            currentMan,\n            setCurrentMan,\n            modelArr,\n            setModelArr,\n            chosenModel,\n            setChosen,\n            chosenCategories,\n            setChosenCategories,\n            PriceRange,\n            setPriceRange,\n            products,\n            setProducts,\n            currentPage,\n            setCurrentPage,\n            visibleProd,\n            setVisible,\n            filterMethod,\n            setFilterMethod,\n            sortMethod,\n            setSortMethod\n          }}\n        >\n          <Header />\n          {/* <div className=\"filterbg\">\n            <div className=\"recctangle\"></div>\n          </div> */}\n\n          <div className=\"Group33738\">\n            <SortDropdown wholeProducts={wholeProducts} />\n            <p className=\"gancxadebebisraodenoba\">\n              {visibleProd.length} განცხადება\n            </p>\n          </div>\n\n          <div>\n            <button className=\"iphonefilter\" onClick={toggleHidden}>\n              ძებნა\n            </button>\n          </div>\n          <div className={`Frame33741 ${isDivHidden ? \"hidden\" : \"\"}`}>\n            <div className=\"closeMenuButton\" onClick={toggleHidden}>\n              X\n            </div>\n\n            <CarTypeComp></CarTypeComp>\n\n            <SellType />\n            <Manufacturer></Manufacturer>\n            <ModelInp></ModelInp>\n            <Category></Category>\n            <PriceFilter></PriceFilter>\n\n            <FilterButton\n              wholeProducts={wholeProducts}\n              hideMenu={toggleHidden}\n            />\n          </div>\n          {/* <div className={`Frame33741 ${isDivHidden ? \"hidden\" : \"\"}`}>\n            <SellType />\n            <Manufacturer></Manufacturer>\n            <Category></Category>\n            <PriceFilter></PriceFilter>{\" \"}\n          </div> */}\n\n          {/* <div className=\"Frame33741\">\n            <SellType />\n            <Manufacturer></Manufacturer>\n            <Category></Category>\n            <PriceFilter></PriceFilter>\n          </div> */}\n\n          {productsToDisplay.map((product) => {\n            return (\n              <>\n                <div className=\"row\">\n                  <ProductComponent product={product} />\n                </div>\n              </>\n            );\n          })}\n\n          <Pagination\n            currentPage={currentPage}\n            totalPage={totalPage}\n            handlePageClick={handlePageClick}\n          />\n        </CarTypeContext.Provider>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Cards\\Product.tsx",["89","90","91","92","93","94","95","96"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./productCSS.css\";\r\nimport { ProductInterface } from \"../Interfaces/ProductInterface\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ka\";\r\nimport axios from 'axios'\r\n\r\n\r\nimport CarTypeContext from \"../CarTypes/CarTypeContext\";\r\nimport { modelInterface } from \"../Interfaces/ModelInterface\";\r\nimport { ManufacturerInterface } from \"../Interfaces/ManufacturerInterface\";\r\n\r\nmoment.locale(\"ka\");\r\n\r\nmoment.updateLocale(\"ka\", {\r\n  relativeTime: {\r\n    future: \"in %s\",\r\n    past: \"%s წინ\",\r\n    s: \"რამდენიმე წამის წინ\",\r\n    ss: \"%d წამის წინ\",\r\n    m: \"1 წუთის წინ\",\r\n    mm: \"%d წუთის წინ\",\r\n    h: \"1 საათის წინ\",\r\n    hh: \"%d საათის წინ\",\r\n    d: \"1 დღის წინ\",\r\n    dd: \"%d დღის წინ\",\r\n    M: \"1 თვის წინ\",\r\n    MM: \"%d თვის წინ\",\r\n    y: \"1 წლის წინ\",\r\n    yy: \"%d წლის წინ\",\r\n  },\r\n});\r\ninterface Props {\r\n  product: ProductInterface;\r\n}\r\n\r\nconst ProductComponent: React.FC<Props> = ({ product }) => {\r\n  const uploadTime = moment(product.order_date);\r\n  const timeSinceUpload = moment.duration(moment().diff(uploadTime)).humanize();\r\n\r\n  // const [foundMan,setFoundMan] = useState<number>()\r\n\r\n  const {products,setProducts} = useContext(CarTypeContext);\r\n  const[wholeMan,setWholeMan] = useState<ManufacturerInterface[]>([])\r\n  const[model,setModel] = useState<String>();\r\n \r\n \r\n\r\n  const fetchManufacturers = async (): Promise<void> => {\r\n    try {\r\n      const response: Response = await fetch(\r\n        \"https://static.my.ge/myauto/js/mans.json\"\r\n      );\r\n      const data = await response.json();\r\n      setWholeMan(data);\r\n    } catch (error) {\r\n      console.error(\"Error while fetching categories\", error);\r\n    }\r\n  };\r\n  useEffect(()=>{\r\n    fetchManufacturers()\r\n  },[])\r\n\r\n  const manName = wholeMan.filter((vehicle) => parseInt(vehicle.man_id) === product.man_id)[0]?.man_name;\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n   \r\n    const manId = products.filter((car)=> car.car_id ==product.car_id )[0].man_id;\r\n    \r\n\r\n          fetch(`https://api2.myauto.ge/ka/getManModels?man_id=${manId}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              setModel(\r\n                data.data.find(\r\n                  (temp: any) =>\r\n                    temp.model_id ===\r\n                    products.filter((x) => x.car_id === product.car_id)[0][\"model_id\"]\r\n                ).model_name\r\n              );\r\n            })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n  },[products,products.length])\r\n\r\n  const imageLink: string = `https://static.my.ge/myauto/photos/${product.photo}/thumbs/${product.car_id}_1.jpg?v=${product.photo_ver}`\r\n\r\n \r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"Frame33744\">\r\n      <div className=\"Frame33518\">\r\n        <div className=\"img\">\r\n          <img\r\n            className=\"img-fluid\"\r\n            src={`https://static.my.ge/myauto/photos/${product.photo}/thumbs/${product.car_id}_1.jpg?v=${product.photo_ver}`}\r\n            alt={product.car_model}\r\n          />\r\n        </div>\r\n        <div className=\"carname\">\r\n          {product.for_rent === false ? (\r\n            <span className=\"model\">\r\n              {manName} {model} &nbsp;&nbsp;\r\n              <span className=\"year\">{product.prod_year} წ</span>\r\n            </span>\r\n          ) : (\r\n            <span className=\"model\">\r\n              <span className=\"forRent\">ქირავდება</span>&nbsp;&nbsp;&nbsp;\r\n              {manName} {model} &nbsp;&nbsp;\r\n              <span className=\"year\">{product.prod_year} წ</span>\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"details\">\r\n          <div className=\"adetails\">\r\n            <svg\r\n              className=\"motor\"\r\n              width=\"16\"\r\n              height=\"12\"\r\n              viewBox=\"0 0 16 12\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                clip-rule=\"evenodd\"\r\n                d=\"M5.52488 0C5.13653 0 4.82171 0.350658 4.82171 0.783217C4.82171 1.21578 5.13653 1.56643 5.52488 1.56643H7.33347V3.27273H5.68644C5.51194 3.27273 5.3446 3.3412 5.22121 3.46308L4.00406 4.66538H3.33668C2.97331 4.66538 2.67875 4.95635 2.67875 5.31528V6.54545H1.50009V5.13369C1.50009 4.7084 1.16428 4.36364 0.750043 4.36364C0.335806 4.36364 0 4.7084 0 5.13369V10.084C0 10.5093 0.335806 10.8541 0.750043 10.8541C1.16428 10.8541 1.50009 10.5093 1.50009 10.084V8.08556H2.67875V9.95745C2.67875 10.3164 2.97331 10.6074 3.33668 10.6074H4.00406L5.22121 11.8096C5.3446 11.9315 5.51194 12 5.68644 12H10.8559C10.9983 12 11.1368 11.9544 11.2507 11.87L13.1305 10.4774C13.2961 10.3546 13.3936 10.162 13.3936 9.95745V8.08556H14.4999V10.084C14.4999 10.5093 14.8357 10.8541 15.25 10.8541C15.6642 10.8541 16 10.5093 16 10.084V5.13369C16 4.7084 15.6642 4.36364 15.25 4.36364C14.8357 4.36364 14.4999 4.7084 14.4999 5.13369V6.54545H13.3936V5.31528C13.3936 5.14292 13.3243 4.97761 13.2009 4.85573L11.7911 3.46308C11.6677 3.3412 11.5004 3.27273 11.3259 3.27273H8.7398V1.56643H10.5475C10.9358 1.56643 11.2507 1.21578 11.2507 0.783217C11.2507 0.350658 10.9358 0 10.5475 0H8.03664H5.52488ZM4.74181 5.77483L5.95896 4.57253H11.0533L12.0778 5.58448V9.6325L10.6366 10.7002H5.95896L4.74181 9.4979C4.61843 9.37602 4.45108 9.30754 4.27658 9.30754H3.99461V5.96518H4.27658C4.45108 5.96518 4.61843 5.89671 4.74181 5.77483Z\"\r\n                fill=\"#9CA2AA\"\r\n              />\r\n            </svg>\r\n            <p className=\"a\">\r\n              {(product.engine_volume / 1000).toFixed(1)}დატ.\r\n              {product.fuel_type_id === 2\r\n                ? \"ბენზინი\"\r\n                : product.fuel_type_id === 3\r\n                ? \"დიზელი\"\r\n                : \"ჰიბრიდი\"}\r\n            </p>\r\n          </div>\r\n          <div className=\"bdetails\">\r\n            <svg\r\n              className=\"garbeni\"\r\n              width=\"14\"\r\n              height=\"14\"\r\n              viewBox=\"0 0 14 14\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <circle\r\n                cx=\"7\"\r\n                cy=\"7\"\r\n                r=\"6.3\"\r\n                stroke=\"#9CA2AA\"\r\n                stroke-width=\"1.4\"\r\n              />\r\n              <circle\r\n                cx=\"7\"\r\n                cy=\"7\"\r\n                r=\"1.3\"\r\n                stroke=\"#9CA2AA\"\r\n                stroke-width=\"1.4\"\r\n              />\r\n              <path\r\n                d=\"M11 7C11 4.79086 9.20914 3 7 3C4.79086 3 3 4.79086 3 7\"\r\n                stroke=\"#9CA2AA\"\r\n                stroke-width=\"1.4\"\r\n                stroke-linecap=\"round\"\r\n              />\r\n              <path\r\n                d=\"M8 6L9.5 4.5\"\r\n                stroke=\"#9CA2AA\"\r\n                stroke-width=\"1.4\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n              />\r\n            </svg>\r\n\r\n            <p className=\"b\">{product.car_run_km} კმ</p>\r\n          </div>\r\n          <div className=\"cdetails\">\r\n            <svg\r\n              className=\"avtomatika\"\r\n              width=\"12\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 12 16\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <rect\r\n                x=\"0.6\"\r\n                y=\"7.6\"\r\n                width=\"10.8\"\r\n                height=\"7.8\"\r\n                rx=\"1.2\"\r\n                stroke=\"#8C929B\"\r\n                stroke-width=\"1.2\"\r\n              />\r\n              <path\r\n                d=\"M6 5V10\"\r\n                stroke=\"#8C929B\"\r\n                stroke-width=\"1.2\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M6 12V13.5\"\r\n                stroke=\"#8C929B\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n              />\r\n              <circle\r\n                cx=\"6\"\r\n                cy=\"2.5\"\r\n                r=\"1.8\"\r\n                stroke=\"#8C929B\"\r\n                stroke-width=\"1.4\"\r\n              />\r\n              <path\r\n                d=\"M3 10V13\"\r\n                stroke=\"#8C929B\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M9 10V13\"\r\n                stroke=\"#8C929B\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n              />\r\n            </svg>\r\n\r\n            <p className=\"c\">\r\n              {product.gear_type_id === 1\r\n                ? \"ავტომატიკა\"\r\n                : product.gear_type_id === 2\r\n                ? \"მექანიკა\"\r\n                : product.gear_type_id === 3\r\n                ? \"ტიპტრონიკი\"\r\n                : \"სხვა\"}\r\n            </p>\r\n          </div>\r\n          <div className=\"ddetails\">\r\n            <svg\r\n              className=\"ruli\"\r\n              width=\"14\"\r\n              height=\"14\"\r\n              viewBox=\"0 0 14 14\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <circle\r\n                cx=\"7\"\r\n                cy=\"7\"\r\n                r=\"6.3\"\r\n                stroke=\"#9CA2AA\"\r\n                stroke-width=\"1.4\"\r\n              />\r\n              <circle\r\n                cx=\"7\"\r\n                cy=\"7\"\r\n                r=\"1.3\"\r\n                stroke=\"#9CA2AA\"\r\n                stroke-width=\"1.4\"\r\n              />\r\n              <path\r\n                d=\"M8.5 7L12.5 5.5\"\r\n                stroke=\"#9CA2AA\"\r\n                stroke-width=\"1.4\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M5.21387 6.99979L0.999766 6.29883\"\r\n                stroke=\"#9CA2AA\"\r\n                stroke-width=\"1.4\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n              />\r\n              <path\r\n                d=\"M7 8.5V13\"\r\n                stroke=\"#9CA2AA\"\r\n                stroke-width=\"1.4\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n              />\r\n            </svg>\r\n\r\n            <p className=\"d\">\r\n              {product.drive_type_id === 1\r\n                ? \"მარჯვენა\"\r\n                : product.drive_type_id === 2\r\n                ? \"მარცხენა\"\r\n                : product.drive_type_id === 3\r\n                ? \"სხვა\"\r\n                : \"\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"threeIcons\">\r\n          <div>\r\n            <svg\r\n              className=\"pencil\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 16 16\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                className=\"icon\"\r\n                d=\"M5.97263 14H3.13887C2.83706 13.9996 2.54773 13.8795 2.33432 13.6661C2.1209 13.4527 2.00082 13.1633 2.0004 12.8615V10.2233C2.00036 10.0743 2.02978 9.92687 2.08699 9.78937C2.14419 9.65186 2.22803 9.52704 2.33369 9.42208L9.41848 2.33328C9.6321 2.11987 9.92171 2 10.2237 2C10.5256 2 10.8152 2.11987 11.0288 2.33328L13.6663 4.97155C13.8797 5.18517 13.9996 5.47478 13.9996 5.77673C13.9996 6.07869 13.8797 6.36829 13.6663 6.58191L7.58219 12.6668H13.0566C13.2334 12.6668 13.403 12.7371 13.528 12.8621C13.653 12.9871 13.7232 13.1566 13.7232 13.3334C13.7232 13.5102 13.653 13.6798 13.528 13.8048C13.403 13.9298 13.2334 14 13.0566 14H5.97263ZM3.33355 12.6668H4.36306L3.33355 11.6373V12.6668ZM5.97343 12.3912L10.73 7.63466L8.36654 5.27119L3.60996 10.0278L5.97343 12.3912ZM11.6722 6.69248L12.5879 5.77673L10.2245 3.41326L9.30792 4.32901L11.6722 6.69248Z\"\r\n                fill=\"#6F7383\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div>\r\n            <svg\r\n              className=\"carr\"\r\n              width=\"18\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 18 16\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                className=\"icon\"\r\n                fill-rule=\"evenodd\"\r\n                clip-rule=\"evenodd\"\r\n                d=\"M8.25893 14.3789V1.61978C8.28343 1.25628 8.60762 0.979985 8.98481 1.00114C9.362 0.979985 9.68619 1.25628 9.71069 1.61978V14.3789C9.68657 14.7427 9.36239 15.0196 8.98481 14.9989C8.60723 15.0196 8.28305 14.7427 8.25893 14.3789ZM12.6142 14.2984C12.2133 14.2984 11.8884 13.9851 11.8884 13.5986H11.1625V12.2514H14.9189V8.76632L14.8884 8.69633H11.1625V7.2967H14.2533L12.9569 4.44634H11.1625V3.10059H13.0251C13.5064 3.10567 13.9391 3.38467 14.1277 3.8116L15.7108 7.2995H16.2741C16.675 7.2995 17 7.61282 17 7.99932C17 8.38581 16.675 8.69913 16.2741 8.69913H16.2436V12.9253C16.2526 13.2872 15.9563 13.5879 15.5809 13.5979H15.5178C15.5178 13.9844 15.1928 14.2977 14.7919 14.2977L12.6142 14.2984ZM2.4519 13.5985C2.4519 13.985 2.77689 14.2984 3.17778 14.2984L5.35542 14.2963C5.75632 14.2963 6.0813 13.9829 6.0813 13.5964H6.80718V12.2514H3.05003V8.7691L3.07979 8.69912H6.80718V7.29948H3.71493L5.0099 4.44632H6.80718V3.10057H4.9424C4.46076 3.1052 4.02766 3.3843 3.83906 3.81159L2.25591 7.29948H1.69626C1.30381 7.30789 0.99244 7.62092 1.00014 7.9993C0.992841 8.37753 1.30398 8.69032 1.69626 8.69912H1.72602V12.9253C1.71667 13.287 2.01224 13.5879 2.3873 13.5985H2.4519Z\"\r\n                fill=\"#6F7383\"\r\n              />\r\n              <path\r\n                d=\"M8.25893 1.61978L8.20893 1.61641V1.61978H8.25893ZM8.25893 14.3789H8.20882L8.20904 14.3822L8.25893 14.3789ZM8.98481 1.00114L8.98199 1.05137L8.98761 1.05106L8.98481 1.00114ZM9.71069 1.61978H9.7608L9.76058 1.61642L9.71069 1.61978ZM9.71069 14.3789L9.76069 14.3822V14.3789H9.71069ZM8.98481 14.9989L8.98757 14.9487L8.98207 14.949L8.98481 14.9989ZM11.8884 13.5986H11.9384V13.5486H11.8884V13.5986ZM12.6142 14.2984V14.3484H12.6143L12.6142 14.2984ZM11.1625 13.5986H11.1125V13.6486H11.1625V13.5986ZM11.1625 12.2514V12.2014H11.1125V12.2514H11.1625ZM14.9189 12.2514V12.3014H14.9689V12.2514H14.9189ZM14.9189 8.76632H14.9689V8.7559L14.9648 8.74635L14.9189 8.76632ZM14.8884 8.69633L14.9343 8.67636L14.9212 8.64633H14.8884V8.69633ZM11.1625 8.69633H11.1125V8.74633H11.1625V8.69633ZM11.1625 7.2967V7.2467H11.1125V7.2967H11.1625ZM14.2533 7.2967V7.3467H14.331L14.2988 7.276L14.2533 7.2967ZM12.9569 4.44634L13.0024 4.42564L12.989 4.39634H12.9569V4.44634ZM11.1625 4.44634H11.1125V4.49634H11.1625V4.44634ZM11.1625 3.10059V3.05059H11.1125V3.10059H11.1625ZM13.0251 3.10059L13.0256 3.05059H13.0251V3.10059ZM14.1277 3.8116L14.082 3.83181L14.0822 3.83227L14.1277 3.8116ZM15.7108 7.2995L15.6653 7.32016L15.6786 7.3495H15.7108V7.2995ZM16.2436 8.69913V8.64913H16.1936V8.69913H16.2436ZM16.2436 12.9253H16.1936L16.1937 12.9266L16.2436 12.9253ZM15.5809 13.5979V13.6479L15.5822 13.6478L15.5809 13.5979ZM15.5178 13.5979V13.5479H15.4678V13.5979H15.5178ZM14.7919 14.2977V14.2477H14.7919L14.7919 14.2977ZM3.17778 14.2984V14.3484H3.17783L3.17778 14.2984ZM2.4519 13.5985H2.5019V13.5485H2.4519V13.5985ZM5.35542 14.2963V14.2463H5.35538L5.35542 14.2963ZM6.0813 13.5964V13.5464H6.0313V13.5964H6.0813ZM6.80718 13.5964V13.6464H6.85718V13.5964H6.80718ZM6.80718 12.2514H6.85718V12.2014H6.80718V12.2514ZM3.05003 12.2514H3.00003V12.3014H3.05003V12.2514ZM3.05003 8.7691L3.00401 8.74953L3.00003 8.75891V8.7691H3.05003ZM3.07979 8.69912V8.64912H3.04672L3.03378 8.67955L3.07979 8.69912ZM6.80718 8.69912V8.74912H6.85718V8.69912H6.80718ZM6.80718 7.29948H6.85718V7.24948H6.80718V7.29948ZM3.71493 7.29948L3.6694 7.27882L3.63733 7.34948H3.71493V7.29948ZM5.0099 4.44632V4.39632H4.97769L4.96437 4.42566L5.0099 4.44632ZM6.80718 4.44632V4.49632H6.85718V4.44632H6.80718ZM6.80718 3.10057H6.85718V3.05057H6.80718V3.10057ZM4.9424 3.10057V3.05057L4.94192 3.05057L4.9424 3.10057ZM3.83906 3.81159L3.88459 3.83225L3.8848 3.83178L3.83906 3.81159ZM2.25591 7.29948V7.34948H2.28813L2.30144 7.32015L2.25591 7.29948ZM1.69626 7.29948V7.24947L1.69519 7.24949L1.69626 7.29948ZM1.00014 7.9993L1.05017 8.00026L1.05013 7.99828L1.00014 7.9993ZM1.69626 8.69912L1.69514 8.74912H1.69626V8.69912ZM1.72602 8.69912H1.77602V8.64912H1.72602V8.69912ZM1.72602 12.9253L1.77602 12.9266V12.9253H1.72602ZM2.3873 13.5985L2.38587 13.6485H2.3873V13.5985ZM8.20893 1.61978V14.3789H8.30893V1.61978H8.20893ZM8.98761 0.951216C8.58476 0.928625 8.23549 1.22393 8.20904 1.61642L8.30882 1.62314C8.33136 1.28864 8.63048 1.03135 8.98201 1.05106L8.98761 0.951216ZM9.76058 1.61642C9.73413 1.22393 9.38486 0.928625 8.98201 0.951216L8.98761 1.05106C9.33914 1.03135 9.63826 1.28864 9.6608 1.62314L9.76058 1.61642ZM9.76069 14.3789V1.61978H9.66069V14.3789H9.76069ZM8.98207 15.0488C9.3853 15.071 9.73454 14.775 9.76058 14.3822L9.6608 14.3756C9.6386 14.7104 9.33947 14.9683 8.98755 14.949L8.98207 15.0488ZM8.20904 14.3822C8.23508 14.775 8.58431 15.071 8.98755 15.0488L8.98207 14.949C8.63015 14.9683 8.33102 14.7104 8.30882 14.3756L8.20904 14.3822ZM11.8384 13.5986C11.8384 14.0144 12.1875 14.3484 12.6142 14.3484V14.2484C12.2392 14.2484 11.9384 13.9557 11.9384 13.5986H11.8384ZM11.1625 13.6486H11.8884V13.5486H11.1625V13.6486ZM11.1125 12.2514V13.5986H11.2125V12.2514H11.1125ZM14.9189 12.2014H11.1625V12.3014H14.9189V12.2014ZM14.8689 8.76632V12.2514H14.9689V8.76632H14.8689ZM14.8426 8.7163L14.8731 8.78629L14.9648 8.74635L14.9343 8.67636L14.8426 8.7163ZM11.1625 8.74633H14.8884V8.64633H11.1625V8.74633ZM11.1125 7.2967V8.69633H11.2125V7.2967H11.1125ZM14.2533 7.2467H11.1625V7.3467H14.2533V7.2467ZM12.9113 4.46704L14.2078 7.3174L14.2988 7.276L13.0024 4.42564L12.9113 4.46704ZM11.1625 4.49634H12.9569V4.39634H11.1625V4.49634ZM11.1125 3.10059V4.44634H11.2125V3.10059H11.1125ZM13.0251 3.05059H11.1625V3.15059H13.0251V3.05059ZM14.1734 3.79139C13.9766 3.34581 13.5257 3.05587 13.0256 3.05059L13.0246 3.15058C13.4871 3.15547 13.9016 3.42352 14.082 3.83181L14.1734 3.79139ZM15.7564 7.27883L14.1732 3.79094L14.0822 3.83227L15.6653 7.32016L15.7564 7.27883ZM16.2741 7.2495H15.7108V7.3495H16.2741V7.2495ZM17.05 7.99932C17.05 7.58349 16.7009 7.2495 16.2741 7.2495V7.3495C16.6491 7.3495 16.95 7.64214 16.95 7.99932H17.05ZM16.2741 8.74913C16.7009 8.74913 17.05 8.41514 17.05 7.99932H16.95C16.95 8.35649 16.6491 8.64913 16.2741 8.64913V8.74913ZM16.2436 8.74913H16.2741V8.64913H16.2436V8.74913ZM16.2936 12.9253V8.69913H16.1936V12.9253H16.2936ZM15.5822 13.6478C15.9834 13.6372 16.3033 13.3153 16.2936 12.9241L16.1937 12.9266C16.2019 13.2592 15.9291 13.5386 15.5796 13.5479L15.5822 13.6478ZM15.5178 13.6479H15.5809V13.5479H15.5178V13.6479ZM14.7919 14.3477C15.2187 14.3477 15.5678 14.0137 15.5678 13.5979H15.4678C15.4678 13.955 15.1669 14.2477 14.7919 14.2477V14.3477ZM12.6143 14.3484L14.7919 14.3477L14.7919 14.2477L12.6142 14.2484L12.6143 14.3484ZM3.17778 14.2484C2.80276 14.2484 2.5019 13.9557 2.5019 13.5985H2.4019C2.4019 14.0144 2.75101 14.3484 3.17778 14.3484V14.2484ZM5.35538 14.2463L3.17773 14.2484L3.17783 14.3484L5.35547 14.3463L5.35538 14.2463ZM6.0313 13.5964C6.0313 13.9536 5.73044 14.2463 5.35542 14.2463V14.3463C5.78219 14.3463 6.1313 14.0123 6.1313 13.5964H6.0313ZM6.80718 13.5464H6.0813V13.6464H6.80718V13.5464ZM6.75718 12.2514V13.5964H6.85718V12.2514H6.75718ZM3.05003 12.3014H6.80718V12.2014H3.05003V12.3014ZM3.00003 8.7691V12.2514H3.10003V8.7691H3.00003ZM3.03378 8.67955L3.00401 8.74953L3.09604 8.78867L3.1258 8.71868L3.03378 8.67955ZM6.80718 8.64912H3.07979V8.74912H6.80718V8.64912ZM6.75718 7.29948V8.69912H6.85718V7.29948H6.75718ZM3.71493 7.34948H6.80718V7.24948H3.71493V7.34948ZM4.96437 4.42566L3.6694 7.27882L3.76046 7.32015L5.05543 4.46699L4.96437 4.42566ZM6.80718 4.39632H5.0099V4.49632H6.80718V4.39632ZM6.75718 3.10057V4.44632H6.85718V3.10057H6.75718ZM4.9424 3.15057H6.80718V3.05057H4.9424V3.15057ZM3.8848 3.83178C4.06516 3.42316 4.48008 3.15502 4.94288 3.15057L4.94192 3.05057C4.44144 3.05538 3.99016 3.34543 3.79332 3.79139L3.8848 3.83178ZM2.30144 7.32015L3.88459 3.83225L3.79353 3.79092L2.21038 7.27881L2.30144 7.32015ZM1.69626 7.34948H2.25591V7.24948H1.69626V7.34948ZM1.05013 7.99828C1.04303 7.64919 1.33073 7.35733 1.69733 7.34947L1.69519 7.24949C1.27688 7.25846 0.941854 7.59265 0.95015 8.00032L1.05013 7.99828ZM1.69738 8.64913C1.33092 8.64091 1.0434 8.34925 1.05013 8.00026L0.950149 7.99833C0.942286 8.40581 1.27704 8.73973 1.69514 8.7491L1.69738 8.64913ZM1.72602 8.64912H1.69626V8.74912H1.72602V8.64912ZM1.77602 12.9253V8.69912H1.67602V12.9253H1.77602ZM2.38872 13.5486C2.03949 13.5386 1.76741 13.259 1.776 12.9266L1.67604 12.924C1.66593 13.3149 1.985 13.6371 2.38588 13.6485L2.38872 13.5486ZM2.4519 13.5485H2.3873V13.6485H2.4519V13.5485Z\"\r\n                fill=\"#6F7383\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div>\r\n            <svg\r\n              className=\"heart\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              viewBox=\"0 0 16 16\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                className=\"icon\"\r\n                fill-rule=\"evenodd\"\r\n                clip-rule=\"evenodd\"\r\n                d=\"M8.68574 2.1679C8.51267 2.29346 8.3477 2.43458 8.19095 2.5894L8.0626 2.72088L8 2.78989L7.9374 2.72088L7.80905 2.5894C7.6523 2.43458 7.48733 2.29346 7.31426 2.1679C6.73288 1.74614 6.06008 1.5 5.3 1.5C2.58473 1.5 1 3.87655 1 6.304C1 8.67851 2.19139 10.7406 4.13701 12.4002C5.50533 13.5673 7.2954 14.5 8 14.5C8.705 14.5 10.495 13.5674 11.8633 12.4002C13.8088 10.7406 15 8.67852 15 6.304C15 3.87655 13.4153 1.5 10.7 1.5C9.93992 1.5 9.26711 1.74614 8.68574 2.1679ZM6.67538 3.71857C6.23895 3.2911 5.78989 3.1 5.3 3.1C3.75142 3.1 2.6 4.44771 2.6 6.304C2.6 8.08759 3.48098 9.73759 5.17536 11.1829C5.76665 11.6872 6.46051 12.1489 7.07374 12.4778C7.37967 12.6419 7.64224 12.7605 7.84224 12.8338C7.91231 12.8595 7.96436 12.8758 8.00009 12.886C8.03585 12.8758 8.08795 12.8595 8.1581 12.8338C8.35812 12.7605 8.62069 12.6419 8.92662 12.4778C9.53983 12.1489 10.2337 11.6873 10.825 11.1829C12.5191 9.73772 13.4 8.08768 13.4 6.304C13.4 4.44771 12.2486 3.1 10.7 3.1C10.2101 3.1 9.76105 3.29109 9.32462 3.71857L9.228 3.81755L8 5.17143L6.77199 3.81755L6.67538 3.71857Z\"\r\n                fill=\"#6F7383\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <div className=\"vip-view-date\">\r\n          <p>\r\n            {product.prom_color == 1 ? (\r\n              <svg\r\n                width=\"41\"\r\n                height=\"20\"\r\n                viewBox=\"0 0 41 20\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <rect width=\"41\" height=\"20\" rx=\"10\" fill=\"#FEC900\" />\r\n                <path\r\n                  d=\"M9.54 6.86L11.13 11.88H11.15L12.76 6.86H14.38L12.01 14H10.24L7.92 6.86H9.54ZM16.5588 14H14.9888V6.86H16.5588V14ZM17.938 6.86H21.168C21.708 6.86 22.1614 6.96 22.528 7.16C22.8947 7.36 23.168 7.63333 23.348 7.98C23.5347 8.32667 23.628 8.71667 23.628 9.15C23.628 9.59 23.5347 9.98333 23.348 10.33C23.168 10.67 22.8947 10.94 22.528 11.14C22.1614 11.34 21.7114 11.44 21.178 11.44H19.508V14H17.938V6.86ZM19.508 10.22H20.758C21.218 10.22 21.558 10.1367 21.778 9.97C21.998 9.79667 22.108 9.52333 22.108 9.15C22.108 8.78333 21.998 8.51333 21.778 8.34C21.5647 8.16667 21.228 8.08 20.768 8.08H19.508V10.22ZM27.1812 12.01V10.94H29.1712V8.95H30.2412V10.94H32.2312V12.01H30.2412V14H29.1712V12.01H27.1812Z\"\r\n                  fill=\"white\"\r\n                />\r\n              </svg>\r\n            ) : (\r\n              <svg\r\n                width=\"32\"\r\n                height=\"20\"\r\n                viewBox=\"0 0 32 20\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <rect width=\"32\" height=\"20\" rx=\"10\" fill=\"#4A6CFA\" />\r\n                <path\r\n                  d=\"M9.54 6.86L11.13 11.88H11.15L12.76 6.86H14.38L12.01 14H10.24L7.92 6.86H9.54ZM16.5588 14H14.9888V6.86H16.5588V14ZM17.938 6.86H21.168C21.708 6.86 22.1614 6.96 22.528 7.16C22.8947 7.36 23.168 7.63333 23.348 7.98C23.5347 8.32667 23.628 8.71667 23.628 9.15C23.628 9.59 23.5347 9.98333 23.348 10.33C23.168 10.67 22.8947 10.94 22.528 11.14C22.1614 11.34 21.7114 11.44 21.178 11.44H19.508V14H17.938V6.86ZM19.508 10.22H20.758C21.218 10.22 21.558 10.1367 21.778 9.97C21.998 9.79667 22.108 9.52333 22.108 9.15C22.108 8.78333 21.998 8.51333 21.778 8.34C21.5647 8.16667 21.228 8.08 20.768 8.08H19.508V10.22Z\"\r\n                  fill=\"white\"\r\n                />\r\n              </svg>\r\n            )}\r\n          </p>\r\n          <div className=\"view-dot-date\">\r\n            <span>\r\n              <div className=\"views\">{product.views} ნახვა</div>\r\n              <svg\r\n                className=\"dot\"\r\n                width=\"3\"\r\n                height=\"4\"\r\n                viewBox=\"0 0 3 4\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <circle cx=\"1.5\" cy=\"2\" r=\"1.5\" fill=\"#8C929B\" />\r\n              </svg>\r\n              <span className=\"date\">{timeSinceUpload}</span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"pricebox\">\r\n          {product.price_value !== 0 ? (\r\n            <>\r\n              <div className=\"price\">\r\n                {product.price_value !== 0\r\n                  ? product.price_value.toLocaleString()\r\n                  : product.price_value}\r\n              </div>\r\n              <svg\r\n                className=\"Gel\"\r\n                width=\"26\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 26 24\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <rect width=\"26\" height=\"24\" rx=\"12\" fill=\"#E2E5EB\" />\r\n                <path\r\n                  d=\"M16.9143 17V15.3223H13.2511C12.6258 15.3223 12.078 15.1699 11.6078 14.8651C11.1376 14.5603 10.7745 14.1306 10.5185 13.5762C10.2624 13.0218 10.1344 12.3797 10.1344 11.6501C10.1344 10.8581 10.2489 10.2004 10.4778 9.67719C10.7068 9.15396 11.0773 8.74834 11.5894 8.46032V11.8085H12.483V8.19391C12.6307 8.16511 12.7907 8.15071 12.9631 8.15071C13.1305 8.15071 13.2979 8.16511 13.4653 8.19391V11.8085H14.3589V8.46032C14.8858 8.74354 15.2637 9.15396 15.4926 9.69159C15.7216 10.2292 15.836 10.9349 15.836 11.8085H18C18 10.9733 17.8535 10.204 17.5606 9.50078C17.2676 8.79754 16.8466 8.20231 16.2976 7.71508C15.7486 7.22785 15.1024 6.89063 14.3589 6.70342V6H13.4653V6.54502L13.229 6.53781C13.1748 6.53301 13.096 6.53061 12.9926 6.53061C12.7612 6.53061 12.5913 6.53541 12.483 6.54502V6H11.5894V6.70342C10.8705 6.89063 10.2403 7.21585 9.69867 7.67908C9.15707 8.1423 8.73855 8.69554 8.44313 9.33877C8.14771 9.98201 8 10.6588 8 11.3693C8 11.9165 8.07632 12.4493 8.22895 12.9678C8.38159 13.4862 \r\n          8.60561 13.9506 8.90103 14.3611C9.19646 14.7715 9.5485 15.0919 9.95716 15.3223V15.3799H8.54653V17H16.9143Z\"\r\n                  fill=\"#272A37\"\r\n                />\r\n              </svg>\r\n            </>\r\n          ) : (\r\n            <span className=\"shetanxmebit\">ფასი&nbsp;შეთანხმებით</span>\r\n          )}\r\n        </div>\r\n        <div className=\"ganbajeba-drosha-qveyana\">\r\n          {product.customs_passed === false ? (\r\n            <div className=\"ganbajeba-ganbajebisfasi-false\">\r\n              <span className=\"ganbajeba-false\">\r\n                განბაჟება &nbsp;\r\n                <span className=\"ganbajebisfasi-false\">\r\n                  {product.price !== null\r\n                    ? product.price.toLocaleString()\r\n                    : product.price}\r\n                  ლ\r\n                </span>\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div className=\"ganbajeba-ganbajebischeck-true\">\r\n              <svg\r\n                className=\"checked\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M5.40305 7.48254C5.16363 7.48219 4.9341 7.58333 4.76597 7.76326C4.41923 8.12087 4.41037 8.70665 4.74612 9.07576L6.64248 10.7392C6.80254 10.9076 7.01979 11.0016 7.24583 11C7.48591 10.9992 7.71597 10.8983 7.88589 10.7193L11.2311 6.57333C11.4029 6.39612 11.4998 6.15334 11.5 5.8998C11.5013 5.66091 11.4121 5.43139 11.2521 5.26238C11.0922 5.09336 10.8749 4.99889 10.6486 5.00001C10.4081 5.00063 10.178 5.10287 10.0095 5.28388L7.29445 8.76151L6.00441 7.74231C5.84459 7.57473 5.62832 7.48093 5.40305 7.48149V7.48254Z\"\r\n                  fill=\"#1EB676\"\r\n                />\r\n              </svg>\r\n\r\n              <span className=\"ganbajeba-true\">განბაჟებული &nbsp;</span>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"flag\">\r\n            {product.location_id === 2 ||\r\n            product.location_id === 4 ||\r\n            product.location_id === 13 ? (\r\n              <svg\r\n                className=\"drosha-geo\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M15.4982 8.00007C15.4982 12.1422 12.1407 15.4999 7.99912 15.4999C3.85751 15.4999 0.5 12.1422 0.5 8.00007C0.5 3.85799 3.85751 0.500244 7.99912 0.500244C12.1407 0.500244 15.4982 3.85799 15.4982 8.00007Z\"\r\n                  fill=\"white\"\r\n                  stroke=\"#E9E9F0\"\r\n                />\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  clipRule=\"evenodd\"\r\n                  d=\"M15.9304 6.95557H9.04433V0.0677221C8.35172 -0.022574 7.65032 -0.022574 6.95771 0.0677221V6.95557H0.0704627C-0.0198255 7.64825 -0.0198255 8.34971 0.0704627 9.04238H6.95771V15.9302C7.65032 16.0205 8.35172 16.0205 9.04433 15.9302V9.04238H15.9316C16.0219 8.34971 16.0219 7.64825 15.9316 6.95557H15.9304ZM4.87147 3.82564V2.78223H3.82816V3.82564H2.78484V4.86904H3.82816V5.91244H4.87147V4.86904H5.91478V3.82564H4.87147ZM12.1736 2.78223V3.82564H13.2214V4.86904H12.1781V5.91244H11.1348V4.86904H10.0915V3.82564H11.1348V2.78223H12.1736ZM4.87147 11.1324V10.089H3.82816V11.1324H2.78484V12.1758H3.82816V13.2192H4.87147V12.1758H5.91478V11.1324H4.87147ZM12.1736 10.089V11.1324H13.2214V12.1758H12.1781V13.2192H11.1348V12.1758H10.0915V11.1324H11.1348V10.089H12.1736Z\"\r\n                  fill=\"#FF3B30\"\r\n                />\r\n              </svg>\r\n            ) : product.location_id === 15 ? (\r\n              <svg\r\n                className=\"drosha-usa\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <mask\r\n                  id=\"mask0_6473_1925\"\r\n                  maskUnits=\"userSpaceOnUse\"\r\n                  x=\"0\"\r\n                  y=\"0\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                >\r\n                  <path\r\n                    d=\"M15.4982 8.00007C15.4982 12.1422 12.1407 15.4999 7.99912 15.4999C3.85751 15.4999 0.5 12.1422 0.5 8.00007C0.5 3.85799 3.85751 0.500244 7.99912 0.500244C12.1407 0.500244 15.4982 3.85799 15.4982 8.00007Z\"\r\n                    fill=\"white\"\r\n                    stroke=\"#E9E9F0\"\r\n                  />\r\n                </mask>\r\n                <g mask=\"url(#mask0_6473_1925)\">\r\n                  <path\r\n                    d=\"M32.5332 -0.71701H-7.99661V0.924323H32.5332V-0.71701Z\"\r\n                    fill=\"#BD3D44\"\r\n                  />\r\n                  <path\r\n                    d=\"M32.5332 2.56433H-7.99661V4.20566H32.5332V2.56433Z\"\r\n                    fill=\"#BD3D44\"\r\n                  />\r\n                  <path\r\n                    d=\"M32.5332 5.84702H-7.99661V7.48835H32.5332V5.84702Z\"\r\n                    fill=\"#BD3D44\"\r\n                  />\r\n                  <path\r\n                    d=\"M32.5332 9.12833H-7.99661V10.7697H32.5332V9.12833Z\"\r\n                    fill=\"#BD3D44\"\r\n                  />\r\n                  <path\r\n                    d=\"M32.5332 12.411H-7.99661V14.0523H32.5332V12.411Z\"\r\n                    fill=\"#BD3D44\"\r\n                  />\r\n                  <path\r\n                    d=\"M32.5332 15.6924H-7.99661V17.3337H32.5332V15.6924Z\"\r\n                    fill=\"#BD3D44\"\r\n                  />\r\n                  <path\r\n                    d=\"M32.5332 0.924316H-7.99661V2.56565H32.5332V0.924316Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    d=\"M32.5332 4.20566H-7.99661V5.84699H32.5332V4.20566Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    d=\"M32.5332 7.48834H-7.99661V9.12967H32.5332V7.48834Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    d=\"M32.5332 10.7697H-7.99661V12.411H32.5332V10.7697Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    d=\"M32.5332 14.0523H-7.99661V15.6937H32.5332V14.0523Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    d=\"M8.21529 -3.99966H-7.99661V7.487H8.21529V-3.99966Z\"\r\n                    fill=\"#192F5D\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M0.10806 -0.0610352L0.25606 0.393632H0.733393L0.346727 0.673632L0.494727 1.1283L0.10806 0.848298L-0.278606 1.1283L-0.130606 0.673632L-0.517273 0.393632H-0.0399399L0.10806 -0.0610352Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M2.80914 -0.0610352L2.95714 0.393632H3.43447L3.04781 0.673632L3.19581 1.1283L2.80914 0.848298L2.42247 1.1283L2.57047 0.673632L2.18381 0.393632H2.66114L2.80914 -0.0610352Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M5.51156 -0.0610352L5.65956 0.393632H6.1369L5.75023 0.673632L5.89823 1.1283L5.51156 0.848298L5.1249 1.1283L5.2729 0.673632L4.88623 0.393632H5.36356L5.51156 -0.0610352Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M1.45859 1.08698L1.60659 1.54164H2.08392L1.69725 1.82164L1.84525 2.27631L1.45859 1.99631L1.07192 2.27631L1.21992 1.82164L0.833252 1.54164H1.31059L1.45859 1.08698Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M4.16101 1.08698L4.30901 1.54164H4.78634L4.39967 1.82164L4.54767 2.27631L4.16101 1.99631L3.77434 2.27631L3.92234 1.82164L3.53568 1.54164H4.01301L4.16101 1.08698Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M6.86343 1.08698L7.01143 1.54164H7.48876L7.1021 1.82164L7.2501 2.27631L6.86343 1.99631L6.47676 2.27631L6.62476 1.82164L6.2381 1.54164H6.71543L6.86343 1.08698Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M0.10806 2.2363L0.25606 2.69097H0.733393L0.346727 2.97097L0.494727 3.42563L0.10806 3.14563L-0.278606 3.42563L-0.130606 2.97097L-0.517273 2.69097H-0.0399399L0.10806 2.2363Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M2.80914 2.2363L2.95714 2.69097H3.43447L3.04781 2.97097L3.19581 3.42563L2.80914 3.14563L2.42247 3.42563L2.57047 2.97097L2.18381 2.69097H2.66114L2.80914 2.2363Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M5.51156 2.2363L5.65956 2.69097H6.1369L5.75023 2.97097L5.89823 3.42563L5.51156 3.14563L5.1249 3.42563L5.2729 2.97097L4.88623 2.69097H5.36356L5.51156 2.2363Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M1.45859 3.38431L1.60659 3.83898H2.08392L1.69725 4.11898L1.84525 4.57364L1.45859 4.29364L1.07192 4.57364L1.21992 4.11898L0.833252 3.83898H1.31059L1.45859 3.38431Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M4.16101 3.38431L4.30901 3.83898H4.78634L4.39967 4.11898L4.54767 4.57364L4.16101 4.29364L3.77434 4.57364L3.92234 4.11898L3.53568 3.83898H4.01301L4.16101 3.38431Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M6.86343 3.38431L7.01143 3.83898H7.48876L7.1021 4.11898L7.2501 4.57364L6.86343 4.29364L6.47676 4.57364L6.62476 4.11898L6.2381 3.83898H6.71543L6.86343 3.38431Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M0.10806 4.53363L0.25606 4.9883H0.733393L0.346727 5.2683L0.494727 5.72296L0.10806 5.44296L-0.278606 5.72296L-0.130606 5.2683L-0.517273 4.9883H-0.0399399L0.10806 4.53363Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M2.80914 4.53363L2.95714 4.9883H3.43447L3.04781 5.2683L3.19581 5.72296L2.80914 5.44296L2.42247 5.72296L2.57047 5.2683L2.18381 4.9883H2.66114L2.80914 4.53363Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M5.51156 4.53363L5.65956 4.9883H6.1369L5.75023 5.2683L5.89823 5.72296L5.51156 5.44296L5.1249 5.72296L5.2729 5.2683L4.88623 4.9883H5.36356L5.51156 4.53363Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M1.45859 5.68164L1.60659 6.13631H2.08392L1.69725 6.41631L1.84525 6.87097L1.45859 6.59097L1.07192 6.87097L1.21992 6.41631L0.833252 6.13631H1.31059L1.45859 5.68164Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M4.16101 5.68164L4.30901 6.13631H4.78634L4.39967 6.41631L4.54767 6.87097L4.16101 6.59097L3.77434 6.87097L3.92234 6.41631L3.53568 6.13631H4.01301L4.16101 5.68164Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M6.86343 5.68164L7.01143 6.13631H7.48876L7.1021 6.41631L7.2501 6.87097L6.86343 6.59097L6.47676 6.87097L6.62476 6.41631L6.2381 6.13631H6.71543L6.86343 5.68164Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                </g>\r\n              </svg>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"location\">\r\n          {product.location_id === 2\r\n            ? \"თბილისი\"\r\n            : product.location_id === 15\r\n            ? \"აშშ\"\r\n            : product.location_id === 4\r\n            ? \"რუსთავი\"\r\n            : product.location_id == 13\r\n            ? \"საქართველო\"\r\n            : \"სხვა\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductComponent;\r\n","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Cards\\Paginations.tsx",[],[],"C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Header\\Header.tsx",["97"],[],"import React, { useState } from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header: React.FC = () => {\r\n  const [showDivs, setShowDivs] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setShowDivs(!showDivs);\r\n  };\r\n  return (\r\n    <header>\r\n      <svg\r\n        className=\"logo\"\r\n        width=\"161\"\r\n        height=\"46\"\r\n        viewBox=\"0 0 161 46\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <g clip-path=\"url(#clip0_1_783)\">\r\n          <path\r\n            d=\"M134.703 23.5896C134.696 29.0116 132.543 34.2089 128.718 38.0401C124.893 41.8714 119.708 44.0233 114.302 44.0233H24.0645C18.6582 44.0248 13.4725 41.8734 9.64707 38.0418C5.82159 34.2102 3.66935 29.012 3.66333 23.5896V22.4104C3.67086 16.989 5.82376 11.7922 9.64907 7.9619C13.4744 4.13156 18.6592 1.98091 24.0645 1.98242H114.302C119.707 1.98242 124.891 4.13355 128.716 7.96356C132.541 11.7936 134.694 16.9894 134.703 22.4104V23.5896Z\"\r\n            fill=\"white\"\r\n          />\r\n          <path\r\n            d=\"M138.702 7.25748e-07H22.2698C16.3614 0.00604003 10.697 2.36439 6.52128 6.55689C2.34554 10.7494 -3.06818e-06 16.4331 0 22.3591L0 23.6409C0 29.5709 2.34867 35.258 6.52932 39.4512C10.71 43.6443 16.3801 46 22.2925 46H138.725C144.634 45.9955 150.3 43.6378 154.477 39.4451C158.654 35.2525 161 29.5679 161 23.6409V22.3591C161 19.4224 160.423 16.5145 159.303 13.8013C158.182 11.0882 156.539 8.62314 154.469 6.54682C152.398 4.47051 149.94 2.82367 147.235 1.70035C144.529 0.577037 141.63 -0.000747484 138.702 7.25748e-07V7.25748e-07ZM117.074 23.4985C117.068 28.0975 115.242 32.506 111.997 35.7553C108.752 39.0047 104.353 40.829 99.7681 40.8275H23.2353C18.651 40.8275 14.254 39.0025 11.0103 35.7533C7.76656 32.5041 5.94122 28.0965 5.9352 23.4985V22.5015C5.94122 17.9035 7.76656 13.4959 11.0103 10.2467C14.254 6.99751 18.651 5.1725 23.2353 5.17251H99.7681C104.353 5.17099 108.752 6.99533 111.997 10.2447C115.242 13.494 117.068 17.9025 117.074 22.5015V23.4985Z\"\r\n            fill=\"#FD4100\"\r\n          />\r\n          <path\r\n            d=\"M125.724 26.9221C125.714 27.4945 125.482 28.0407 125.079 28.4455C124.675 28.8503 124.131 29.0823 123.56 29.0925C122.986 29.0925 122.436 28.8638 122.03 28.4568C121.624 28.0498 121.396 27.4977 121.396 26.9221C121.396 26.3465 121.624 25.7944 122.03 25.3874C122.436 24.9804 122.986 24.7517 123.56 24.7517C124.131 24.7619 124.675 24.9939 125.079 25.3987C125.482 25.8036 125.714 26.3497 125.724 26.9221\"\r\n            fill=\"white\"\r\n          />\r\n          <path\r\n            d=\"M138.372 16.9644C137.388 17.1779 136.381 17.2716 135.374 17.2436C136.981 17.9386 137.759 18.8842 137.759 20.5248C137.759 22.9743 135.765 24.7517 132.488 24.7517C132.006 24.7651 131.523 24.7192 131.051 24.615C130.919 24.684 130.808 24.7878 130.73 24.9152C130.652 25.0427 130.61 25.1889 130.608 25.3384C130.608 25.7258 130.773 26.0904 131.994 26.0904H133.931C136.873 26.0904 138.759 27.6456 138.759 29.759C138.759 32.3737 136.43 33.9574 132.102 33.9574C127.774 33.9574 126.388 32.7041 126.116 30.6192C126.106 30.5266 126.116 30.433 126.145 30.3447C126.175 30.2563 126.222 30.1752 126.285 30.1068C126.348 30.0383 126.425 29.9841 126.51 29.9477C126.595 29.9113 126.688 29.8936 126.78 29.8957H128.887C129.031 29.8946 129.171 29.9441 129.282 30.0358C129.393 30.1274 129.469 30.2553 129.495 30.397C129.666 31.149 130.33 31.4566 132.216 31.4566C134.431 31.4566 134.931 30.8413 134.931 30.0381C134.931 29.2349 134.431 28.7849 133.159 28.7849H131.324C128.552 28.7849 127.445 27.6456 127.445 26.2841C127.475 25.7896 127.627 25.3103 127.885 24.8881C128.143 24.466 128.501 24.114 128.927 23.863C127.314 22.9971 126.655 21.8863 126.655 20.2457C126.655 17.3974 128.927 15.603 132.204 15.603C134.043 15.7026 135.871 15.2674 137.469 14.3497C137.556 14.3082 137.65 14.2853 137.746 14.2825C137.842 14.2797 137.938 14.2972 138.026 14.3337C138.115 14.3702 138.195 14.4249 138.262 14.4944C138.328 14.5639 138.38 14.6465 138.412 14.7371L138.855 16.1327C138.882 16.2199 138.889 16.3117 138.878 16.4021C138.867 16.4926 138.838 16.5797 138.791 16.658C138.745 16.7363 138.682 16.8039 138.608 16.8567C138.534 16.9095 138.45 16.9462 138.361 16.9644H138.372ZM130.376 20.1944C130.376 21.5844 131.148 22.3306 132.312 22.3306C133.477 22.3306 134.198 21.5844 134.198 20.1374C134.198 18.6905 133.59 18.0753 132.312 18.0753C131.176 18.0753 130.376 18.8842 130.376 20.1944Z\"\r\n            fill=\"white\"\r\n          />\r\n          <path\r\n            d=\"M151.015 23.4472H143.194C143.416 25.7258 144.529 26.3354 146.08 26.3354C146.967 26.3167 147.831 26.0483 148.573 25.5606C148.713 25.4729 148.881 25.4384 149.044 25.4635C149.208 25.4886 149.357 25.5715 149.465 25.6973L150.237 26.774C150.292 26.8454 150.332 26.9276 150.354 27.0153C150.375 27.103 150.378 27.1943 150.363 27.2833C150.347 27.3723 150.314 27.4571 150.264 27.5322C150.214 27.6073 150.148 27.6712 150.072 27.7196C148.782 28.6042 147.256 29.0787 145.693 29.0811C141.473 29.0811 139.366 26.3524 139.366 22.4047C139.366 18.5937 141.422 15.5688 145.25 15.5688C148.851 15.5688 151.072 17.9614 151.072 22.0515C151.083 22.5061 151.064 22.9609 151.015 23.413V23.4472ZM147.409 20.9919C147.358 19.283 146.841 18.0696 145.358 18.0696C144.08 18.0696 143.359 18.8785 143.194 21.1571H147.409V20.9919Z\"\r\n            fill=\"white\"\r\n          />\r\n          <path\r\n            d=\"M37.4343 19.9666V29.4229C37.4359 29.5109 37.4197 29.5982 37.3869 29.6798C37.354 29.7613 37.3052 29.8354 37.2431 29.8976C37.1811 29.9598 37.1073 30.0089 37.0259 30.0418C36.9446 30.0748 36.8575 30.091 36.7698 30.0894H33.9982C33.91 30.0917 33.8223 30.0761 33.7403 30.0435C33.6583 30.0109 33.5838 29.962 33.5212 29.8997C33.4585 29.8374 33.4091 29.7631 33.3759 29.6811C33.3427 29.5992 33.3264 29.5113 33.328 29.4229V20.69C33.328 19.2146 32.8282 18.8272 32.1921 18.8272C31.3628 18.8272 30.6983 19.4937 30.1417 20.6388V29.4229C30.136 29.5979 30.0642 29.7641 29.9408 29.8879C29.8174 30.0117 29.6516 30.0837 29.4772 30.0894H26.6374C26.4692 30.0805 26.3111 30.0057 26.1974 29.881C26.0837 29.7563 26.0235 29.5918 26.0297 29.4229V20.69C26.0297 19.2146 25.4617 18.8272 24.8086 18.8272C23.9737 18.8272 23.3091 19.4937 22.7014 20.6388V29.4229C22.7061 29.5923 22.6446 29.7568 22.53 29.8814C22.4154 30.0059 22.2568 30.0806 22.088 30.0894H19.2482C19.0742 30.0824 18.9092 30.0099 18.7861 29.8864C18.663 29.7629 18.5907 29.5974 18.5837 29.4229V16.8904C18.592 16.7163 18.6647 16.5516 18.7875 16.4283C18.9104 16.3051 19.0747 16.2322 19.2482 16.2239H21.6337C21.7892 16.2221 21.9394 16.2802 22.0535 16.3861C22.1676 16.4921 22.2369 16.6379 22.2471 16.7936L22.4686 17.9329C22.9086 17.2836 23.5018 16.7535 24.1954 16.3897C24.8891 16.026 25.6616 15.8398 26.4443 15.8479C27.1487 15.8147 27.8453 16.0071 28.4334 16.3973C29.0215 16.7875 29.4706 17.3552 29.7157 18.0183C30.1665 17.3441 30.7772 16.7928 31.493 16.414C32.2087 16.0351 33.0071 15.8406 33.8164 15.8479C35.9804 15.8479 37.423 17.3746 37.423 19.9893\"\r\n            fill=\"#414042\"\r\n          />\r\n          <path\r\n            d=\"M48.1972 30.1179C47.1408 33.4276 44.9768 35.4328 41.0409 35.8145C40.8707 35.8309 40.7007 35.7808 40.5664 35.6747C40.432 35.5686 40.3436 35.4146 40.3196 35.2448L40.0981 33.6099C40.0698 33.4476 40.1065 33.2807 40.2 33.1453C40.2935 33.0099 40.4365 32.9169 40.5979 32.8864C42.4835 32.5503 43.4377 31.9408 44.0908 30.773C43.821 30.6314 43.5818 30.4377 43.3869 30.2031C43.1919 29.9685 43.0451 29.6975 42.9549 29.4058L39.0984 17.0898C39.0624 16.9924 39.0505 16.8876 39.064 16.7846C39.0775 16.6816 39.1158 16.5834 39.1757 16.4986C39.2356 16.4139 39.3152 16.345 39.4077 16.2981C39.5001 16.2513 39.6026 16.2277 39.7062 16.2296H42.6482C42.8016 16.2325 42.9498 16.2859 43.0699 16.3816C43.19 16.4774 43.2753 16.6101 43.3127 16.7594L45.6414 27.4405L48.2767 16.7423C48.3078 16.6099 48.3792 16.4906 48.4809 16.4008C48.5827 16.3109 48.7098 16.2551 48.8447 16.241H51.6845C51.7867 16.2402 51.8877 16.2639 51.9789 16.3101C52.0702 16.3564 52.1491 16.4239 52.2092 16.5069C52.2692 16.5899 52.3085 16.6862 52.324 16.7876C52.3394 16.8889 52.3304 16.9926 52.2979 17.0898L48.1972 30.1179Z\"\r\n            fill=\"#414042\"\r\n          />\r\n          <path\r\n            d=\"M65.6109 28.2836L65.0429 29.9527C64.992 30.0987 64.8925 30.2226 64.7611 30.3035C64.6297 30.3845 64.4745 30.4175 64.3216 30.397C63.7301 30.3652 63.1589 30.1694 62.6716 29.8315C62.1843 29.4936 61.8 29.0268 61.5613 28.483C61.1102 29.1657 60.4882 29.7176 59.7576 30.0835C59.027 30.4494 58.2134 30.6165 57.3982 30.5679C54.6833 30.5679 52.9056 28.7564 52.9056 26.2271C52.9056 23.225 55.1775 21.5844 59.3974 21.5844H60.7719V20.9407C60.7719 19.3001 60.1585 18.7988 58.4432 18.7988C57.4218 18.8452 56.4121 19.037 55.4444 19.3684C55.2794 19.4115 55.1044 19.3931 54.9519 19.3166C54.7994 19.2402 54.6798 19.1108 54.6152 18.9526L54.1154 17.4487C54.0589 17.2817 54.0701 17.0991 54.1466 16.9403C54.2231 16.7815 54.3588 16.6593 54.5243 16.5999C56.0133 16.1157 57.5654 15.8546 59.1305 15.8251C63.1062 15.8251 64.8442 17.4942 64.8442 20.7185V26.0904C64.8442 26.8936 65.0089 27.3095 65.344 27.5601C65.4611 27.6353 65.5512 27.746 65.6013 27.8761C65.6514 28.0062 65.6587 28.149 65.6223 28.2836H65.6109ZM60.7719 26.2556V23.8061H59.7723C57.8866 23.8061 57.0006 24.4726 57.0006 25.8397C57.0006 26.9791 57.6083 27.5886 58.6079 27.5886C59.0553 27.5843 59.493 27.4579 59.8742 27.2231C60.2554 26.9883 60.5657 26.6538 60.7719 26.2556\"\r\n            fill=\"#414042\"\r\n          />\r\n          <path\r\n            d=\"M79.2476 30.0894H76.919C76.8411 30.0949 76.763 30.0842 76.6894 30.0581C76.6158 30.0319 76.5484 29.9908 76.4914 29.9374C76.4344 29.8839 76.389 29.8192 76.358 29.7474C76.327 29.6755 76.3111 29.5981 76.3113 29.5198L76.1466 28.3804C75.7124 29.0872 75.097 29.664 74.3647 30.0508C73.6324 30.4376 72.81 30.6201 71.9834 30.5793C69.4333 30.5793 68.161 28.9102 68.161 26.21V16.9075C68.1603 16.8198 68.1769 16.7328 68.2101 16.6516C68.2432 16.5703 68.2921 16.4966 68.354 16.4345C68.4158 16.3725 68.4894 16.3234 68.5704 16.2902C68.6513 16.257 68.7381 16.2402 68.8255 16.241H71.5972C71.7708 16.2493 71.935 16.3222 72.0579 16.4454C72.1808 16.5687 72.2534 16.7334 72.2617 16.9075V25.6689C72.2617 27.0588 72.7047 27.4747 73.5907 27.4747C74.4768 27.4747 75.2037 26.905 75.8115 25.8682V16.9075C75.8107 16.8198 75.8274 16.7328 75.8605 16.6516C75.8936 16.5703 75.9426 16.4966 76.0044 16.4345C76.0663 16.3725 76.1398 16.3234 76.2208 16.2902C76.3018 16.257 76.3885 16.2402 76.476 16.241H79.2476C79.3356 16.2395 79.4229 16.2556 79.5046 16.2885C79.5862 16.3214 79.6604 16.3703 79.7229 16.4325C79.7854 16.4946 79.8348 16.5686 79.8683 16.6502C79.9017 16.7318 79.9186 16.8193 79.9178 16.9075V29.44C79.9194 29.5285 79.9031 29.6163 79.8699 29.6982C79.8367 29.7802 79.7873 29.8545 79.7247 29.9168C79.662 29.9791 79.5875 30.028 79.5055 30.0606C79.4235 30.0932 79.3358 30.1088 79.2476 30.1065\"\r\n            fill=\"#414042\"\r\n          />\r\n          <path\r\n            d=\"M91.7258 28.8988C91.7671 28.9749 91.7929 29.0585 91.8016 29.1447C91.8102 29.2309 91.8016 29.318 91.7762 29.4008C91.7508 29.4836 91.7091 29.5605 91.6536 29.6269C91.5982 29.6933 91.53 29.7479 91.4531 29.7875C90.4702 30.2786 89.3877 30.5359 88.2896 30.5394C85.2396 30.5394 83.7459 28.7849 83.7459 25.5321V19.1348H82.468C82.3789 19.1387 82.2899 19.1243 82.2066 19.0924C82.1233 19.0605 82.0474 19.0119 81.9835 18.9494C81.9196 18.887 81.8692 18.8121 81.8353 18.7293C81.8014 18.6466 81.7848 18.5578 81.7864 18.4683V16.9075C81.7849 16.8195 81.801 16.7322 81.8339 16.6506C81.8667 16.569 81.9156 16.4949 81.9776 16.4327C82.0396 16.3705 82.1135 16.3215 82.1948 16.2886C82.2761 16.2556 82.3633 16.2394 82.4509 16.241H83.7232V13.8484C83.7333 13.6835 83.7999 13.5271 83.9116 13.4056C84.0234 13.2842 84.1735 13.2052 84.3366 13.1819L87.1082 12.88C87.1988 12.8667 87.2911 12.8734 87.3789 12.8996C87.4666 12.9257 87.5476 12.9707 87.6162 13.0314C87.6848 13.0921 87.7395 13.1671 87.7763 13.2511C87.8132 13.3352 87.8313 13.4262 87.8295 13.518V16.241H90.3059C90.3963 16.2502 90.4837 16.2784 90.5625 16.3237C90.6413 16.3691 90.7098 16.4306 90.7633 16.5042C90.8169 16.5778 90.8544 16.6619 90.8735 16.751C90.8925 16.8401 90.8926 16.9322 90.8738 17.0214L90.6523 18.5766C90.6268 18.7351 90.5459 18.8793 90.4242 18.9837C90.3025 19.088 90.1479 19.1456 89.9878 19.1462H87.8239V25.4751C87.8239 26.8082 88.2669 27.281 89.1586 27.281C89.4825 27.2795 89.8029 27.2136 90.1014 27.0873C90.2533 27.0289 90.4212 27.0279 90.5738 27.0845C90.7263 27.1411 90.8532 27.2514 90.9306 27.3949L91.7258 28.8988Z\"\r\n            fill=\"#414042\"\r\n          />\r\n          <path\r\n            d=\"M105.925 23.1965C105.925 27.6171 103.375 30.5394 99.1604 30.5394C94.9461 30.5394 92.3959 27.8108 92.3959 23.168C92.3959 18.7475 94.9461 15.8251 99.1604 15.8251C103.375 15.8251 105.925 18.5253 105.925 23.1965ZM96.667 23.1965C96.667 26.2556 97.4962 27.5373 99.1604 27.5373C100.824 27.5373 101.659 26.1986 101.659 23.225C101.659 20.1375 100.824 18.8557 99.1604 18.8557C97.4962 18.8557 96.667 20.1887 96.667 23.1965\"\r\n            fill=\"#414042\"\r\n          />\r\n        </g>\r\n        <defs>\r\n          <clipPath id=\"clip0_1_783\">\r\n            <rect width=\"161\" height=\"46\" fill=\"white\" />\r\n          </clipPath>\r\n        </defs>\r\n      </svg>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\DropDown\\DropDown.tsx",["98","99","100"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ProductInterface } from \"../Interfaces/ProductInterface\";\r\nimport CarTypeContext from \"../CarTypes/CarTypeContext\";\r\n\r\ntype Props = {\r\n  wholeProducts: ProductInterface[];\r\n};\r\n\r\nconst SortDropdown: React.FC<Props> = ({ wholeProducts }) => {\r\n  \r\n  const { products, setProducts } = useContext(CarTypeContext);\r\n\r\n  \r\n  const [filtData,setFilteredData] = useState<ProductInterface[]>([])\r\n  \r\n  \r\n  const {visibleProd,setVisible,filterMethod,setFilterMethod,sortMethod,setSortMethod} = useContext(CarTypeContext)\r\n  \r\n  useEffect(() => {\r\n    let filteredData = [];\r\n    const now = new Date();\r\n    switch (filterMethod) {\r\n      case \"hour1\":\r\n        filteredData = products.filter((product) => {\r\n          const orderDate = new Date(product.order_date);\r\n          const timeDifference =\r\n            Math.abs(now.getTime() - orderDate.getTime()) / 3600000;\r\n          return timeDifference <= 1; // 1 hour in ms\r\n        });\r\n        break;\r\n      case \"hour3\":\r\n        filteredData = products.filter((product) => {\r\n          const orderDate = new Date(product.order_date);\r\n          const timeDifference =\r\n            Math.abs(now.getTime() - orderDate.getTime()) / 3600000;\r\n          return timeDifference <= 3; // 1 hour in ms\r\n        });\r\n        break;\r\n      case \"hour6\":\r\n        filteredData = products.filter((product) => {\r\n          const orderDate = new Date(product.order_date);\r\n          const timeDifference =\r\n            Math.abs(now.getTime() - orderDate.getTime()) / 3600000;\r\n          return timeDifference <= 6; // 1 hour in ms\r\n        });\r\n        break;\r\n      case \"hour9\":\r\n        filteredData = products.filter((product) => {\r\n          const orderDate = new Date(product.order_date);\r\n          const timeDifference =\r\n            Math.abs(now.getTime() - orderDate.getTime()) / 3600000;\r\n          return timeDifference <= 9; // 1 hour in ms\r\n        });\r\n        break;\r\n      case \"hour12\":\r\n        filteredData = products.filter((product) => {\r\n          const orderDate = new Date(product.order_date);\r\n          const timeDifference =\r\n            Math.abs(now.getTime() - orderDate.getTime()) / 3600000;\r\n          return timeDifference <= 12; // 1 hour in ms\r\n        });\r\n        break;\r\n      case \"hour24\":\r\n        filteredData = products.filter((product) => {\r\n          const orderDate = new Date(product.order_date);\r\n          const timeDifference =\r\n            Math.abs(now.getTime() - orderDate.getTime()) / 3600000;\r\n          return timeDifference <= 24; // 1 hour in ms\r\n        });\r\n        break;\r\n      default:\r\n        filteredData = products;\r\n    }\r\n    setVisible(filteredData);\r\n    setFilteredData(filteredData)\r\n  }, [filterMethod]);\r\n\r\n  useEffect(() => {\r\n    let sortedArray = [...filtData];\r\n    if (sortMethod) {\r\n      switch (sortMethod) {\r\n        case \"option1\":\r\n          sortedArray.sort((a, b) => {\r\n            const dateA = new Date(a.order_date.replace(\" \", \"T\"));\r\n            const dateB = new Date(b.order_date.replace(\" \", \"T\"));\r\n            return dateB.getTime() - dateA.getTime();\r\n          }); // date descending\r\n          break;\r\n        case \"option2\":\r\n          sortedArray.sort((a, b) => {\r\n            const dateA = new Date(a.order_date.replace(\" \", \"T\"));\r\n            const dateB = new Date(b.order_date.replace(\" \", \"T\"));\r\n            return dateA.getTime() - dateB.getTime();\r\n          }); // date ascending\r\n          break;\r\n        case \"option3\":\r\n          sortedArray.sort((a, b) => b.price_value - a.price_value); // price descending\r\n          break;\r\n        case \"option4\":\r\n          sortedArray.sort((a, b) => a.price_value - b.price_value); // price ascending\r\n          break;\r\n        case \"option5\":\r\n          sortedArray.sort((a, b) => b.car_run_km - a.car_run_km); // car run descending\r\n          break;\r\n        case \"option6\":\r\n          sortedArray.sort((a, b) => a.car_run_km - b.car_run_km); // car run ascending\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    if (sortedArray.length > 0) {\r\n      setVisible(sortedArray);\r\n      setProducts(sortedArray)\r\n      // setFilteredData(sortedArray);\r\n    }\r\n  }, [sortMethod]);\r\n  return (\r\n    <>\r\n      <select\r\n        className=\"filterMethod\"\r\n        value={filterMethod}\r\n        onChange={(e) => setFilterMethod(e.target.value)}\r\n      >\r\n        <option value=\"\" disabled selected hidden>\r\n          პერიოდი\r\n        </option>\r\n        <option value=\"hour1\">1 საათის წინ</option>\r\n        <option value=\"hour3\">3 საათის წინ</option>\r\n        <option value=\"hour6\">6 საათის წინ</option>\r\n        <option value=\"hour12\">12 საათის წინ</option>\r\n        <option value=\"hour24\">24 საათის წინ</option>\r\n      </select>\r\n\r\n      <select\r\n        className=\"sortMethod\"\r\n        value={sortMethod}\r\n        onChange={(e) => setSortMethod(e.target.value)}\r\n      >\r\n        <option value=\"option1\">თარიღი კლებადი</option>\r\n        <option value=\"option2\">თარიღი ზრდადი</option>\r\n        <option value=\"option3\">ფასი კლებადი</option>\r\n        <option value=\"option4\">ფასი ზრდადი</option>\r\n        <option value=\"option5\">გარბენი კლებადი</option>\r\n        <option value=\"option6\">გარბენი ზრდადი</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SortDropdown;\r\n","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\Manufacturer.tsx",["101","102","103","104","105","106"],[],"C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\CarTypes\\CarTypeContext.tsx",["107"],[],"import React from \"react\";\r\nimport { CarTypeInterface } from \"../Interfaces/CarTypeInterface\";\r\nimport { createContext } from \"react\";\r\nimport { ManufacturerInterface } from \"../Interfaces/ManufacturerInterface\";\r\nimport { modelInterface } from \"../Interfaces/ModelInterface\";\r\nimport { ProductInterface } from \"../Interfaces/ProductInterface\";\r\n\r\ninterface CategoryInterface {\r\n  sellType:string,\r\n  setSellType:(newSelltype:string)=>void,\r\n\r\n  categories: CarTypeInterface[];\r\n  setCategories: (newCategories: CarTypeInterface[]) => void;\r\n\r\n  chosenCategories: string[];\r\n  setChosenCategories: (newchosenCat: string[]) => void;\r\n\r\n  cartegory: number;\r\n  setCartegory: (newCat: number) => void;\r\n\r\n  manArr: ManufacturerInterface[];\r\n  setManArr: (newArr: ManufacturerInterface[]) => void;\r\n\r\n  currentMan: string[];\r\n  setCurrentMan: (newVal: string[]) => void;\r\n\r\n  modelArr: modelInterface[];\r\n  setModelArr: (newVal: modelInterface[]) => void;\r\n\r\n  chosenModel: string[];\r\n  setChosen: (newVal: string[]) => void;\r\n\r\n  PriceRange: [number, number];\r\n  setPriceRange: (newValue: [number, number]) => void;\r\n\r\n  products: ProductInterface[];\r\n  setProducts: (newVal: ProductInterface[]) => void;\r\n\r\n  currentPage: number;\r\n  setCurrentPage: (page: number) => void;\r\n\r\n  visibleProd:ProductInterface[];\r\n  setVisible:(newProd:ProductInterface[])=>void\r\n\r\n  filterMethod:string\r\n  setFilterMethod:(val:string)=>void\r\n\r\n  sortMethod:string\r\n  setSortMethod:(val:string)=>void\r\n}\r\n\r\nconst CarTypeContext = createContext<CategoryInterface>({\r\n  sellType:\"\",\r\n  setSellType:()=>{},\r\n\r\n  categories: [],\r\n  setCategories: () => {},\r\n  cartegory: 0,\r\n  setCartegory: () => {},\r\n\r\n  manArr: [],\r\n  setManArr: () => {},\r\n  currentMan: [],\r\n  setCurrentMan: () => {},\r\n\r\n  modelArr: [],\r\n  setModelArr: () => {},\r\n  chosenModel: [],\r\n  setChosen: () => {},\r\n\r\n  chosenCategories: [],\r\n  setChosenCategories: () => {},\r\n\r\n  PriceRange: [0, 0],\r\n  setPriceRange: () => {},\r\n\r\n  products: [],\r\n  setProducts: () => {},\r\n\r\n  currentPage: 1,\r\n  setCurrentPage: () => {},\r\n\r\n  visibleProd:[],\r\n  setVisible:()=>{},\r\n\r\n  filterMethod:\"\",\r\n  setFilterMethod:()=>{},\r\n\r\n  sortMethod:\"option1\",\r\n  setSortMethod:()=>{}\r\n  \r\n});\r\n\r\nexport default CarTypeContext;\r\n","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\Category.tsx",["108","109"],[],"import React, { ChangeEvent, useState, useEffect, useRef } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport CarTypeContext from \"../CarTypes/CarTypeContext\";\r\nimport \"./Category.css\";\r\n\r\nconst Category: React.FC = () => {\r\n  const { categories, setCategories } = useContext(CarTypeContext);\r\n  const { chosenCategories, setChosenCategories } = useContext(CarTypeContext);\r\n  \r\n  const [droppedCat, setDroppedCat] = useState<boolean>(false);\r\n  const dropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    // Update checkbox states when chosenCategories changes\r\n    updateCheckboxStates();\r\n  }, [chosenCategories]);\r\n\r\n  const handleChangeCat = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    const checkboxValue = event.target.value;\r\n    if (event.target.checked) {\r\n      setChosenCategories([...chosenCategories, checkboxValue]);\r\n    } else {\r\n      const updatedCategor = chosenCategories.filter(\r\n        (val) => val !== checkboxValue\r\n      );\r\n      setChosenCategories(updatedCategor);\r\n    }\r\n  };\r\n\r\n  const showDropdownCat = (): void => {\r\n    setDroppedCat(true);\r\n  };\r\n\r\n  const handleBlurCat = (): void => {\r\n    setDroppedCat(false);\r\n  };\r\n\r\n  const handleCheckboxMouseDown = (\r\n    event: React.MouseEvent<HTMLInputElement>\r\n  ): void => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const resetVal = (): void => {\r\n    setChosenCategories([]);\r\n    updateCheckboxStates();\r\n    setDroppedCat(false);\r\n  };\r\n\r\n  const updateCheckboxStates = (): void => {\r\n    const checkboxes = document.querySelectorAll<HTMLInputElement>(\r\n      'input[type=\"checkbox\"][name^=\"category_\"]'\r\n    );\r\n    checkboxes.forEach((checkbox) => {\r\n      const inputCheckbox = checkbox as HTMLInputElement;\r\n      inputCheckbox.checked = chosenCategories.includes(inputCheckbox.value);\r\n    });\r\n  };\r\n\r\n  const getPlaceholderText = (): string => {\r\n    if (chosenCategories.length === 0) {\r\n      return \"კატეგორია\";\r\n    } else {\r\n      return chosenCategories.join(\", \");\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = (event: MouseEvent): void => {\r\n    if (\r\n      dropdownRef.current &&\r\n      !dropdownRef.current.contains(event.target as Node)\r\n    ) {\r\n      setDroppedCat(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"position-relative\" ref={dropdownRef}>\r\n      <div tabIndex={0} onFocus={showDropdownCat} onBlur={handleBlurCat}>\r\n        <div className=\"input-group\">\r\n          <input\r\n            className=\"form-control border-1\"\r\n            type=\"text\"\r\n            placeholder={getPlaceholderText()}\r\n          />\r\n          {chosenCategories.length > 0 ? (\r\n            <button className=\"btn  input-group-append\" onClick={resetVal}>\r\n              X\r\n            </button>\r\n          ) : (\r\n            <div className=\"input-group-append\">\r\n              <button className=\"input-group-text\">\r\n                <svg\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"m15 11-3 3-3-3\"\r\n                    stroke=\"#6F7383\"\r\n                    strokeWidth=\"1.4\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            droppedCat ? \"checkbox-container3\" : \"checkbox-container3 d-none\"\r\n          }\r\n        >\r\n          <div className=\"scrollable-checkbox2\">\r\n            {categories.map((cat) => {\r\n              return (\r\n                <div className=\"form-check\" key={cat.title}>\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    name={`category_${cat.title}`}\r\n                    onMouseDown={handleCheckboxMouseDown}\r\n                    value={cat.seo_title}\r\n                    onChange={handleChangeCat}\r\n                  />\r\n                  <label\r\n                    className=\"form-check-label w-100\"\r\n                    htmlFor={`category_${cat.title}`}\r\n                  >\r\n                    {cat.title}\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\CarTypes\\CarTypeComp.tsx",["110","111","112","113","114","115"],[],"import React, { FC, useContext, useEffect, useState } from \"react\";\r\nimport CarTypeContext from \"./CarTypeContext\";\r\nimport { CarTypeInterface } from \"../Interfaces/CarTypeInterface\";\r\nimport \"./CarTypeComp.css\";\r\n\r\nconst CarTypeComp: FC = () => {\r\n  const { categories, setCategories } = useContext(CarTypeContext);\r\n  const { cartegory, setCartegory } = useContext(CarTypeContext);\r\n  const { currentMan, setCurrentMan } = useContext(CarTypeContext);\r\n  const { chosenModel, setChosen } = useContext(CarTypeContext);\r\n\r\n  const [wholeCategories, setWholeCategories] = useState<CarTypeInterface[]>(\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setWholeCategories(categories);\r\n    const first = categories.filter((e) => e.category_type == 0);\r\n    setCategories(first);\r\n  }, []);\r\n\r\n  \r\n  const setCat = (id: number): void => {\r\n    setCartegory(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let newCategories: CarTypeInterface[] = wholeCategories.filter(\r\n      (e) => e.category_type == cartegory\r\n    );\r\n    if (wholeCategories.length > 0) {\r\n      setCategories(newCategories);\r\n    }\r\n    setCurrentMan([]);\r\n    setChosen([]);\r\n  }, [cartegory]);\r\n\r\n  return (\r\n    <div className=\"cartegoryy\">\r\n      <button className=\"Car\" onClick={() => setCat(0)}>\r\n        <svg\r\n          width=\"30\"\r\n          height=\"15\"\r\n          viewBox=\"0 0 30 15\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M19.719 10.973C19.7021 10.3542 19.8701 9.74436 20.2016 9.22153C20.5332 8.69871 21.0131 8.28664 21.58 8.03801C22.147 7.78939 22.7752 7.7155 23.3843 7.82581C23.9935 7.93611 24.5559 8.22559 24.9997 8.65724C25.4434 9.08888 25.7484 9.64307 25.8755 10.2489C26.0026 10.8548 25.9462 11.4848 25.7133 12.0585C25.4805 12.6321 25.0819 13.1232 24.5684 13.4691C24.055 13.8149 23.4501 13.9998 22.831 14C22.4278 14.006 22.0274 13.9323 21.6527 13.7834C21.278 13.6344 20.9363 13.413 20.6473 13.1319C20.3582 12.8507 20.1275 12.5153 19.9682 12.1449C19.8089 11.7744 19.7242 11.3762 19.719 10.973V10.973ZM21.89 10.973C21.8846 11.1599 21.9351 11.3442 22.0351 11.5023C22.135 11.6604 22.2798 11.785 22.4509 11.8604C22.6221 11.9357 22.8118 11.9583 22.9959 11.9252C23.18 11.8921 23.35 11.8049 23.4842 11.6746C23.6184 11.5444 23.7107 11.3771 23.7493 11.1942C23.788 11.0112 23.7711 10.8209 23.701 10.6475C23.6309 10.4741 23.5106 10.3256 23.3557 10.221C23.2007 10.1163 23.018 10.0603 22.831 10.06C22.5855 10.0571 22.3487 10.1515 22.1726 10.3225C21.9965 10.4936 21.8952 10.7275 21.891 10.973H21.89ZM4.262 10.973C4.26774 10.57 4.35282 10.1721 4.51239 9.802C4.67195 9.4319 4.90288 9.09687 5.19197 8.81604C5.48106 8.53522 5.82265 8.3141 6.19722 8.16533C6.5718 8.01656 6.97201 7.94306 7.375 7.94901C7.78033 7.93624 8.18409 8.00505 8.56231 8.15136C8.94054 8.29766 9.28551 8.51846 9.57674 8.80067C9.86797 9.08287 10.0995 9.42072 10.2577 9.79415C10.4158 10.1676 10.4973 10.569 10.4973 10.9745C10.4973 11.38 10.4158 11.7814 10.2577 12.1549C10.0995 12.5283 9.86797 12.8661 9.57674 13.1483C9.28551 13.4306 8.94054 13.6514 8.56231 13.7977C8.18409 13.944 7.78033 14.0128 7.375 14C6.97188 14.0057 6.57159 13.9319 6.197 13.7828C5.82241 13.6338 5.48086 13.4124 5.19186 13.1313C4.90286 12.8502 4.67208 12.5149 4.5127 12.1445C4.35333 11.7742 4.26848 11.3761 4.263 10.973H4.262ZM6.434 10.973C6.42883 11.1597 6.47943 11.3436 6.57932 11.5014C6.67922 11.6591 6.82388 11.7835 6.99482 11.8586C7.16576 11.9338 7.35522 11.9562 7.53899 11.9232C7.72276 11.8901 7.8925 11.803 8.02651 11.6729C8.16052 11.5429 8.25273 11.3759 8.29134 11.1932C8.32996 11.0105 8.31323 10.8205 8.24329 10.6473C8.17336 10.4742 8.0534 10.3258 7.89873 10.2212C7.74407 10.1166 7.56172 10.0605 7.375 10.06C7.12954 10.0573 6.89297 10.1518 6.71689 10.3228C6.5408 10.4939 6.43947 10.7276 6.435 10.973H6.434ZM26.761 11.349C26.7806 11.2278 26.7937 11.1056 26.8 10.983C26.7678 9.98498 26.3487 9.0386 25.6313 8.34399C24.914 7.64939 23.9545 7.26102 22.956 7.26102C21.9575 7.26102 20.998 7.64939 20.2807 8.34399C19.5633 9.0386 19.1442 9.98498 19.112 10.983C19.1182 11.1056 19.1312 11.2278 19.151 11.349H11.051C11.0703 11.2278 11.083 11.1056 11.089 10.983C11.0809 10.4861 10.975 9.99558 10.7774 9.53957C10.5797 9.08356 10.2941 8.67096 9.937 8.32533C9.57985 7.97969 9.15811 7.7078 8.69587 7.52519C8.23363 7.34257 7.73994 7.2528 7.243 7.26101C6.24014 7.2455 5.27213 7.62866 4.55158 8.32634C3.83102 9.02402 3.41684 9.97917 3.4 10.982C3.40636 11.1046 3.41904 11.2267 3.438 11.348H0.509C0.443171 11.3492 0.377754 11.3374 0.316505 11.3132C0.255257 11.2891 0.199382 11.2531 0.152089 11.2072C0.104795 11.1614 0.0670144 11.1067 0.0409149 11.0463C0.0148153 10.9858 0.000910982 10.9208 0 10.855L0 8.94201C0.00184142 8.83768 0.0449894 8.73835 0.119978 8.6658C0.194967 8.59325 0.295672 8.5534 0.4 8.55501V7.11101C0.403745 6.78367 0.517389 6.46709 0.722682 6.21211C0.927976 5.95712 1.21301 5.77853 1.532 5.70501L6.716 4.45301L10.568 1.45301C11.7883 0.508844 13.2881 -0.00235085 14.831 8.73995e-06H21.738C22.176 -0.0013529 22.5996 0.15643 22.93 0.444009L26.33 3.40901L27.423 3.35101C27.7962 3.3263 28.1649 3.4434 28.4554 3.67887C28.746 3.91434 28.9369 4.25082 28.99 4.62101L29.49 8.55801C29.5559 8.55668 29.6214 8.56841 29.6828 8.5925C29.7442 8.6166 29.8002 8.65259 29.8476 8.69841C29.895 8.74423 29.9328 8.79897 29.959 8.85949C29.9852 8.92 29.9991 8.98509 30 9.05101V10.851C29.9992 10.917 29.9854 10.9822 29.9593 11.0428C29.9332 11.1035 29.8953 11.1583 29.8479 11.2043C29.8005 11.2502 29.7445 11.2863 29.683 11.3104C29.6216 11.3346 29.556 11.3463 29.49 11.345L26.761 11.349ZM11.448 2.75501L9.6 4.19101L19.237 3.71901V1.54901H14.984C13.704 1.54637 12.4596 1.97076 11.448 2.75501ZM20.842 3.63801L24.024 3.48201L22.057 1.76901C21.8942 1.62689 21.6851 1.54902 21.469 1.55001H20.843L20.842 3.63801Z\"\r\n            fill={cartegory === 0 ? \"#FD4100\" : \"#8C929B\"}\r\n          />\r\n        </svg>\r\n      </button>\r\n      <button className=\"Traqtori\" onClick={() => setCat(1)}>\r\n        <svg\r\n          id=\"logo\"\r\n          width=\"22\"\r\n          height=\"18\"\r\n          viewBox=\"0 0 22 18\"\r\n          fill=\"#8C929B\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M7.735 14.2707C7.69898 13.2695 7.27574 12.3213 6.55438 11.6257C5.83302 10.9301 4.86981 10.5414 3.8675 10.5414C2.86519 10.5414 1.90198 10.9301 1.18062 11.6257C0.459259 12.3213 0.0360213 13.2695 0 14.2707C0.0360213 15.2719 0.459259 16.2201 1.18062 16.9157C1.90198 17.6113 2.86519 18 3.8675 18C4.86981 18 5.83302 17.6113 6.55438 16.9157C7.27574 16.2201 7.69898 15.2719 7.735 14.2707V14.2707ZM4.513 14.2707C4.51779 14.3992 4.48404 14.5262 4.41609 14.6353C4.34815 14.7445 4.2491 14.8308 4.13169 14.8833C4.01427 14.9358 3.88384 14.9519 3.75716 14.9298C3.63047 14.9076 3.51331 14.848 3.42073 14.7588C3.32815 14.6696 3.26437 14.5547 3.23759 14.429C3.2108 14.3032 3.22224 14.1724 3.27043 14.0532C3.31862 13.934 3.40135 13.8319 3.50801 13.7601C3.61467 13.6882 3.74038 13.6499 3.869 13.65C4.03655 13.6473 4.19832 13.7112 4.31885 13.8275C4.43939 13.9439 4.50884 14.1033 4.512 14.2707H4.513ZM22 13.0303C21.9742 11.6885 21.4166 10.4119 20.4496 9.48091C19.4826 8.54994 18.1854 8.04083 16.843 8.06545C15.5011 8.0411 14.2044 8.55022 13.2378 9.48097C12.2712 10.4117 11.7138 11.688 11.688 13.0293C11.7135 14.3706 12.2708 15.6469 13.2375 16.5775C14.2042 17.5082 15.5011 18.017 16.843 17.9921C18.1849 18.017 19.4819 17.5084 20.4488 16.578C21.4158 15.6476 21.9737 14.3716 22 13.0303V13.0303ZM18.778 13.0303C18.7685 13.5338 18.5594 14.013 18.1965 14.3624C17.8336 14.7118 17.3468 14.9028 16.843 14.8934C16.3394 14.9025 15.8528 14.7114 15.4901 14.362C15.1275 14.0126 14.9185 13.5336 14.909 13.0303C14.919 12.5273 15.1282 12.0487 15.4908 11.6998C15.8534 11.3509 16.3397 11.16 16.843 11.1691C17.3464 11.1597 17.833 11.3505 18.1958 11.6994C18.5586 12.0484 18.768 12.5271 18.778 13.0303V13.0303ZM10.4 14.8934V13.0303H8.863C8.9697 13.4352 9.02415 13.852 9.025 14.2707C9.0256 14.4783 9.01224 14.6857 8.985 14.8914L10.4 14.8934ZM17.489 13.0303C17.4938 12.9019 17.4601 12.775 17.3922 12.6659C17.3244 12.5568 17.2254 12.4704 17.1081 12.4179C16.9908 12.3654 16.8605 12.3491 16.7339 12.3711C16.6073 12.3931 16.4901 12.4525 16.3974 12.5415C16.3048 12.6305 16.2409 12.7452 16.2138 12.8708C16.1868 12.9964 16.198 13.1272 16.2459 13.2464C16.2937 13.3657 16.3762 13.4679 16.4826 13.54C16.589 13.612 16.7145 13.6507 16.843 13.651C17.0109 13.6539 17.1732 13.5903 17.2942 13.474C17.4153 13.3576 17.4853 13.1981 17.489 13.0303V13.0303ZM10.529 11.7898C10.8563 10.3662 11.6612 9.09746 12.8099 8.19443C13.9585 7.29141 15.3817 6.80851 16.843 6.826C18.3304 6.82407 19.775 7.32382 20.943 8.24437L21.764 7.28679C20.4674 6.26889 18.8869 5.67796 17.2403 5.59544C15.5937 5.51291 13.962 5.94284 12.57 6.826H3.864C3.19403 6.81528 2.54707 7.07013 2.06455 7.53483C1.58202 7.99954 1.30319 8.6363 1.289 9.30591V9.97361C2.07704 9.53427 2.96467 9.30437 3.867 9.30591C4.7621 9.30064 5.64341 9.52642 6.42563 9.9614C7.20785 10.3964 7.86449 11.0258 8.332 11.7888L10.529 11.7898ZM6.446 5.58454V3.72336C6.43602 3.22034 6.22676 2.74184 5.86416 2.3929C5.50156 2.04395 5.01525 1.85308 4.512 1.86218V3.09864C4.67981 3.09569 4.84195 3.15938 4.96286 3.27574C5.08377 3.3921 5.15358 3.55163 5.157 3.71936V5.58454H6.446ZM12.2 5.58454C14.1898 4.44004 16.5323 4.07054 18.778 4.547L18.778 1.24045H20.066V-3.33859e-07H9.752V1.24045H10.874L9.69 5.58454H12.2Z\"\r\n            fill={cartegory === 1 ? \"#FD4100\" : \"#8C929B\"}\r\n          />\r\n        </svg>\r\n      </button>\r\n      <button className=\"Moto\" onClick={() => setCat(2)}>\r\n        <svg\r\n          width=\"23\"\r\n          height=\"17\"\r\n          viewBox=\"0 0 23 17\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M6.448 12.665C6.44598 11.8924 6.17796 11.1441 5.689 10.546L6.56 9.47498C7.09609 10.0582 7.47287 10.7698 7.65401 11.541C7.73565 11.9098 7.77722 12.2863 7.778 12.664C7.77533 12.8376 7.84162 13.0052 7.96234 13.1301C8.08306 13.2549 8.24837 13.3268 8.422 13.33L14.502 13.33C14.7535 14.0982 15.239 14.7686 15.8904 15.2471C16.5419 15.7257 17.3267 15.9886 18.135 15.999C19.1776 15.9795 20.1701 15.5476 20.8949 14.7979C21.6197 14.0481 22.0178 13.0417 22.002 11.999C22.0181 10.9562 21.62 9.9496 20.8952 9.1998C20.1703 8.45 19.1777 8.01818 18.135 7.99898C17.0919 8.01766 16.0988 8.44925 15.3735 9.19911C14.6483 9.94896 14.2499 10.9559 14.266 11.999H12.935C12.936 10.948 13.2417 9.91983 13.815 9.03898C13.5376 8.43408 13.1165 7.90618 12.5884 7.50129C12.0603 7.0964 11.4412 6.8268 10.785 6.71598C10.6959 6.70107 10.6108 6.66765 10.5354 6.61788C10.46 6.5681 10.3958 6.50307 10.347 6.42698L8.87801 4.15098C8.55697 3.64693 8.102 3.24216 7.564 2.98198C7.564 2.98698 7.555 2.98898 7.549 2.99498C7.21771 2.82741 6.85902 2.72072 6.49 2.67998V1.39098C6.67489 1.35961 6.86162 1.34024 7.049 1.33298H7.778C7.9503 1.3263 8.11332 1.25316 8.23287 1.1289C8.35241 1.00464 8.41918 0.838908 8.41918 0.666479C8.41918 0.49405 8.35241 0.328321 8.23287 0.204059C8.11332 0.0797958 7.9503 0.00665379 7.778 -2.09808e-05L7.049 -2.09808e-05C5.51042 0.0408154 4.04941 0.684205 2.98052 1.79162C1.91163 2.89904 1.32036 4.38192 1.33401 5.92098C1.31783 6.48616 1.52599 7.03478 1.913 7.44698C2.08272 7.62247 2.28617 7.76183 2.51112 7.85669C2.73607 7.95155 2.97787 7.99995 3.222 7.99898C3.58794 7.9995 3.95275 8.03973 4.31001 8.11898C4.75067 8.22446 5.17142 8.40039 5.55601 8.63998L4.68501 9.71098C4.23726 9.46653 3.73611 9.33634 3.22601 9.33198C2.35693 9.34776 1.52955 9.70745 0.925217 10.3322C0.320883 10.957 -0.0111084 11.7959 0.00200462 12.665C-0.0132446 13.0978 0.0588322 13.5292 0.213936 13.9336C0.36904 14.3379 0.603994 14.7069 0.904783 15.0184C1.20557 15.33 1.56603 15.5778 1.96466 15.7471C2.3633 15.9163 2.79193 16.0035 3.225 16.0035C3.65808 16.0035 4.08671 15.9163 4.48535 15.7471C4.88398 15.5778 5.24444 15.33 5.54523 15.0184C5.84602 14.7069 6.08097 14.3379 6.23607 13.9336C6.39118 13.5292 6.46325 13.0978 6.448 12.665ZM5.158 12.665C5.16634 12.9241 5.12251 13.1822 5.02912 13.424C4.93573 13.6658 4.79468 13.8863 4.61436 14.0725C4.43404 14.2588 4.21813 14.4068 3.97946 14.5079C3.74078 14.6091 3.48421 14.6612 3.225 14.6612C2.96579 14.6612 2.70923 14.6091 2.47055 14.5079C2.23188 14.4068 2.01597 14.2588 1.83565 14.0725C1.65533 13.8863 1.51428 13.6658 1.42089 13.424C1.3275 13.1822 1.28367 12.9241 1.29201 12.665C1.28371 12.1434 1.4827 11.6399 1.8453 11.2649C2.2079 10.89 2.70447 10.6742 3.22601 10.665C3.44116 10.6676 3.65426 10.7072 3.856 10.782L2.722 12.248C2.6146 12.3871 2.56505 12.5623 2.58368 12.7371C2.60231 12.9118 2.68769 13.0726 2.822 13.186C2.88732 13.2408 2.96308 13.2818 3.0447 13.3066C3.12632 13.3313 3.21211 13.3393 3.29689 13.3299C3.38166 13.3206 3.46366 13.2941 3.53793 13.2522C3.6122 13.2103 3.6772 13.1537 3.729 13.086L4.86201 11.615C5.05447 11.9314 5.1565 12.2946 5.15701 12.665H5.158ZM20.712 11.999C20.7227 12.694 20.4575 13.365 19.9745 13.8649C19.4915 14.3648 18.83 14.6528 18.135 14.666C17.6794 14.6618 17.2331 14.5359 16.8425 14.3013C16.4518 14.0668 16.1309 13.7321 15.913 13.332H17.489C18.0105 13.3225 18.5069 13.1067 18.8694 12.7317C19.232 12.3568 19.431 11.8535 19.423 11.332C19.4264 11.2452 19.4123 11.1586 19.3814 11.0775C19.3506 10.9963 19.3037 10.9222 19.2435 10.8596C19.1833 10.797 19.1111 10.7472 19.0312 10.7131C18.9513 10.6791 18.8653 10.6616 18.7785 10.6616C18.6917 10.6616 18.6057 10.6791 18.5258 10.7131C18.4459 10.7472 18.3737 10.797 18.3135 10.8596C18.2533 10.9222 18.2064 10.9963 18.1756 11.0775C18.1447 11.1586 18.1306 11.2452 18.134 11.332C18.1367 11.5059 18.0703 11.6738 17.9494 11.7988C17.8285 11.9238 17.6629 11.9958 17.489 11.999H15.556C15.5453 11.3036 15.8108 10.6323 16.2942 10.1324C16.7777 9.63245 17.4397 9.3446 18.135 9.33198C18.83 9.34513 19.4915 9.6332 19.9745 10.1331C20.4575 10.633 20.7227 11.3039 20.712 11.999ZM18.779 6.66398C19.6476 6.6482 20.4746 6.28875 21.0787 5.66439C21.6828 5.04003 22.0148 4.20167 22.002 3.33298C22.0035 3.24661 21.9879 3.16081 21.9561 3.08048C21.9244 3.00014 21.8771 2.92686 21.817 2.86481C21.7569 2.80277 21.6852 2.75318 21.6059 2.71889C21.5266 2.6846 21.4414 2.66628 21.355 2.66498H18.527L14.391 5.20698C13.852 5.53262 13.2826 5.80523 12.691 6.02098C13.5193 6.47782 14.2139 7.14312 14.706 7.95098C14.706 7.96198 14.706 7.97298 14.716 7.98398C15.2653 7.49512 15.9099 7.12543 16.6092 6.89824C17.3085 6.67104 18.0473 6.59128 18.779 6.66398ZM13.73 4.06398L14.759 3.42298C14.3582 2.78754 13.804 2.26304 13.1475 1.89767C12.4911 1.5323 11.7533 1.33778 11.002 1.33198C10.1495 1.33894 9.31785 1.59589 8.61 2.07098C9.14508 2.41934 9.60204 2.87495 9.952 3.40898L11.052 5.12398C11.9987 4.92583 12.9045 4.56697 13.73 4.06298V4.06398Z\"\r\n            fill={cartegory === 2 ? \"#FD4100\" : \"#8C929B\"}\r\n          />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarTypeComp;\r\n","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\ModelInp.tsx",["116","117","118","119"],[],"C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\PriceFilter.tsx",["120","121"],[],"C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\SellType.tsx",["122"],[],"import { useContext, useState, useEffect, useRef } from \"react\";\r\nimport React, { ChangeEvent } from \"react\";\r\nimport { CategoryInterface } from \"../Interfaces/CategoryInterface\";\r\nimport CarTypeContext from \"../CarTypes/CarTypeContext\";\r\n\r\nconst SellType: React.FC = () => {\r\n  const [droppedSellType, setDroppedSellType] = useState<boolean>(false);\r\n  const {sellType, setSellType} = useContext(CarTypeContext);\r\n  const [chosenSellSubTypes, setChosenSellSubTypes] = useState<string[]>([]);\r\n\r\n  const dropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleChangeSellType = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    const sellTypeValue = event.target.value;\r\n    if (event.target.checked) {\r\n      setSellType(sellTypeValue);\r\n      setChosenSellSubTypes([]);\r\n    } else {\r\n      setSellType(\"\");\r\n      setChosenSellSubTypes([]);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const showDropdownSellType = (): void => {\r\n    setDroppedSellType((prevState) => !prevState);\r\n  };\r\n\r\n  const handleBlurSellType = (): void => {\r\n    setDroppedSellType(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleOutsideClick = (event: MouseEvent): void => {\r\n      if (\r\n        dropdownRef.current &&\r\n        !dropdownRef.current.contains(event.target as Node)\r\n      ) {\r\n        setDroppedSellType(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleOutsideClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n    };\r\n  }, []);\r\n\r\n  const handleCheckboxMouseDown = (\r\n    event: React.MouseEvent<HTMLInputElement>\r\n  ): void => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const resetVal = (): void => {\r\n    setSellType(\"\");\r\n    setChosenSellSubTypes([]);\r\n    setDroppedSellType(false);\r\n  };\r\n\r\n  const renderInputValue = (): string => {\r\n    let value = sellType;\r\n    if (chosenSellSubTypes.length > 0) {\r\n      value += \" (\" + chosenSellSubTypes.join(\", \") + \")\";\r\n    }\r\n    return value;\r\n  };\r\n\r\n  console.log(\"SELLTyPE\",sellType);\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        tabIndex={0}\r\n        onFocus={showDropdownSellType}\r\n        onBlur={handleBlurSellType}\r\n      >\r\n        <div className=\"input-group\">\r\n          <input\r\n            className=\"form-control border-1\"\r\n            type=\"text\"\r\n            placeholder=\"გარიგების ტიპი\"\r\n            readOnly\r\n            value={renderInputValue()}\r\n          />\r\n          {sellType.length > 0 ? (\r\n            <button className=\"btn input-group-append\" onClick={resetVal}>\r\n              X\r\n            </button>\r\n          ) : (\r\n            <div className=\"input-group-append\">\r\n              <button className=\"input-group-text\">\r\n                <svg\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"m15 11-3 3-3-3\"\r\n                    stroke=\"#6F7383\"\r\n                    strokeWidth=\"1.4\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {droppedSellType && (\r\n          <div className=\"checkbox-container3\" ref={dropdownRef}>\r\n            <div className=\"scrollable-checkbox2 border-0 sell-type-dropdown\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  name=\"იყიდება\"\r\n                  onMouseDown={handleCheckboxMouseDown}\r\n                  value=\"იყიდება\"\r\n                  onChange={handleChangeSellType}\r\n                  checked={sellType === \"იყიდება\"}\r\n                />\r\n                <label className=\"form-check-label w-100\" htmlFor=\"იყიდება\">\r\n                  იყიდება\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  name=\"ქირავდება\"\r\n                  onMouseDown={handleCheckboxMouseDown}\r\n                  value=\"ქირავდება\"\r\n                  onChange={handleChangeSellType}\r\n                  checked={sellType === \"ქირავდება\"}\r\n                />\r\n                <label className=\"form-check-label w-100\" htmlFor=\"ქირავდება\">\r\n                  ქირავდება\r\n                </label>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellType;\r\n","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\FilterButton.tsx",["123","124","125","126"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport CarTypeContext from \"../CarTypes/CarTypeContext\";\r\nimport CombinedFilter from \"./CombinedFilter\";\r\nimport \"./FilterButton.css\";\r\nimport { ProductInterface } from \"../Interfaces/ProductInterface\";\r\n\r\ntype Props = {\r\n  wholeProducts: ProductInterface[];\r\n  hideMenu: Function;\r\n};\r\n\r\nconst FilterButton: React.FC<Props> = ({ wholeProducts, hideMenu }) => {\r\n  const {\r\n    products,\r\n    sellType,\r\n    setProducts,\r\n    setCurrentPage,\r\n    manArr,\r\n    modelArr,\r\n    currentMan,\r\n    chosenModel,\r\n    cartegory,\r\n    chosenCategories,\r\n    PriceRange,\r\n    categories,\r\n    visibleProd,\r\n    setVisible,\r\n   \r\n    setFilterMethod,\r\n   \r\n    setSortMethod\r\n    // Add categories from context\r\n  } = useContext(CarTypeContext);\r\n\r\n  const handleClick = (): void => {\r\n    const filteredProducts = CombinedFilter(\r\n      wholeProducts,\r\n      sellType,\r\n      manArr,\r\n      modelArr,\r\n      currentMan,\r\n      chosenModel,\r\n      chosenCategories,\r\n      cartegory,\r\n      PriceRange,\r\n      categories\r\n    );\r\n    setProducts(filteredProducts);\r\n    setVisible(filteredProducts)\r\n    setFilterMethod(\"\")\r\n    setSortMethod(\"option1\")\r\n    setCurrentPage(1);\r\n    hideMenu();\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"filtrisghilaki\">\r\n      <div className=\"primary-icon\">\r\n        <button className=\"search\" onClick={handleClick}>\r\n          <svg\r\n            width=\"202\"\r\n            height=\"32\"\r\n            viewBox=\"0 0 202 32\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <rect width=\"202\" height=\"32\" rx=\"6\" fill=\"#FD4100\" />\r\n            <path\r\n              d=\"M57.7466 20.14C56.9999 20.14 56.3512 19.9907 55.8006 19.692C55.2499 19.384 54.8299 18.9593 54.5406 18.418C54.2512 17.8767 54.1066 17.2513 54.1066 16.542C54.1066 15.8327 54.2466 15.2027 54.5266 14.652C54.8066 14.1013 55.1986 13.6767 55.7026 13.378C56.2159 13.07 56.8039 12.916 57.4666 12.916C57.8866 12.916 58.2692 12.9813 58.6146 13.112C58.9599 13.2427 59.2352 13.4247 59.4406 13.658V9.122H61.4006V16.542C61.4006 17.2607 61.2559 17.8907 60.9666 18.432C60.6772 18.9733 60.2572 19.3933 59.7066 19.692C59.1559 19.9907 58.5026 20.14 57.7466 20.14ZM57.7606 18.46C58.2552 18.46 58.6566 18.2967 58.9646 17.97C59.2726 17.6433 59.4266 17.2187 59.4266 16.696V16.374C59.4266 15.8327 59.2726 15.4033 58.9646 15.086C58.6659 14.7593 58.2646 14.596 57.7606 14.596C57.2566 14.596 56.8506 14.7687 56.5426 15.114C56.2346 15.4593 56.0806 15.9307 56.0806 16.528C56.0806 17.1253 56.2346 17.5967 56.5426 17.942C56.8599 18.2873 57.2659 18.46 57.7606 18.46ZM66.1105 23.71C65.3918 23.71 64.7618 23.57 64.2205 23.29C63.6885 23.01 63.2778 22.618 62.9885 22.114C62.6991 21.6193 62.5545 21.0453 62.5545 20.392C62.5545 20.0187 62.6105 19.6313 62.7225 19.23L64.6405 19.314C64.5658 19.6407 64.5285 19.9393 64.5285 20.21C64.5285 20.77 64.6685 21.2133 64.9485 21.54C65.2285 21.8667 65.6205 22.03 66.1245 22.03C66.6005 22.03 66.9831 21.8713 67.2725 21.554C67.5711 21.246 67.7205 20.8027 67.7205 20.224V16.178C67.7205 15.6273 67.5805 15.226 67.3005 14.974C67.0298 14.7127 66.6751 14.582 66.2365 14.582C65.7885 14.582 65.4385 14.7173 65.1865 14.988C64.9438 15.2587 64.8225 15.618 64.8225 16.066C64.8225 16.2527 64.8458 16.4953 64.8925 16.794L62.9185 16.85C62.8531 16.5513 62.8205 16.248 62.8205 15.94C62.8205 15.3333 62.9651 14.8013 63.2545 14.344C63.5531 13.8867 63.9591 13.5367 64.4725 13.294C64.9858 13.042 65.5645 12.916 66.2085 12.916C66.8618 12.916 67.4498 13.0513 67.9725 13.322C68.5045 13.5833 68.9198 13.966 69.2185 14.47C69.5265 14.974 69.6805 15.5667 69.6805 16.248V20.224C69.6805 21.2973 69.3631 22.1467 68.7285 22.772C68.0938 23.3973 67.2211 23.71 66.1105 23.71ZM75.9584 13.07C76.7237 13.2847 77.335 13.7 77.7924 14.316C78.259 14.932 78.4924 15.674 78.4924 16.542C78.4924 17.2607 78.329 17.8953 78.0024 18.446C77.685 18.9873 77.2464 19.4073 76.6864 19.706C76.1357 19.9953 75.5104 20.14 74.8104 20.14C74.1104 20.14 73.4757 19.9953 72.9064 19.706C72.3464 19.4073 71.9077 18.9873 71.5904 18.446C71.273 17.8953 71.1144 17.2607 71.1144 16.542C71.1144 15.618 71.371 14.8433 71.8844 14.218C72.3977 13.5833 73.0744 13.1773 73.9144 13V11.992C73.9144 11.8147 73.8724 11.6653 73.7884 11.544C73.7137 11.4227 73.5877 11.278 73.4104 11.11C73.2237 10.9327 73.0744 10.774 72.9624 10.634C72.8597 10.4847 72.771 10.2887 72.6964 10.046C72.631 9.794 72.6124 9.486 72.6404 9.122H74.6704C74.6704 9.41133 74.717 9.64 74.8104 9.808C74.913 9.96667 75.067 10.144 75.2724 10.34C75.4964 10.5547 75.6644 10.7647 75.7764 10.97C75.8977 11.1753 75.9584 11.4647 75.9584 11.838V13.07ZM74.8104 18.46C75.3144 18.46 75.725 18.2873 76.0424 17.942C76.3597 17.5967 76.5184 17.13 76.5184 16.542C76.5184 15.954 76.3597 15.4873 76.0424 15.142C75.725 14.7873 75.3144 14.61 74.8104 14.61C74.297 14.61 73.8817 14.7827 73.5644 15.128C73.2564 15.4733 73.1024 15.9447 73.1024 16.542C73.1024 17.1393 73.2564 17.6107 73.5644 17.956C73.8817 18.292 74.297 18.46 74.8104 18.46ZM83.5767 20.14C82.8207 20.14 82.1673 19.9907 81.6167 19.692C81.066 19.3933 80.646 18.9733 80.3567 18.432C80.0673 17.8907 79.9227 17.2607 79.9227 16.542V12.062C79.9227 11.166 80.212 10.452 80.7907 9.92C81.3693 9.388 82.1627 9.122 83.1707 9.122H86.7267V10.802H83.3247C82.858 10.802 82.4987 10.9093 82.2467 11.124C82.004 11.3293 81.8827 11.6373 81.8827 12.048V13.658C82.088 13.4247 82.3633 13.2427 82.7087 13.112C83.054 12.9813 83.4367 12.916 83.8567 12.916C84.5193 12.916 85.1027 13.07 85.6067 13.378C86.12 13.6767 86.5167 14.1013 86.7967 14.652C87.0767 15.2027 87.2167 15.8327 87.2167 16.542C87.2167 17.2513 87.072 17.8767 86.7827 18.418C86.4933 18.9593 86.0733 19.384 85.5227 19.692C84.972 19.9907 84.3233 20.14 83.5767 20.14ZM83.5627 18.46C84.0573 18.46 84.4587 18.2873 84.7667 17.942C85.084 17.5967 85.2427 17.1253 85.2427 16.528C85.2427 15.9307 85.0887 15.4593 84.7807 15.114C84.4727 14.7687 84.0667 14.596 83.5627 14.596C83.0587 14.596 82.6527 14.7593 82.3447 15.086C82.046 15.4033 81.8967 15.8327 81.8967 16.374V16.696C81.8967 17.2187 82.0507 17.6433 82.3587 17.97C82.6667 18.2967 83.068 18.46 83.5627 18.46ZM92.6497 13.07C92.6497 13.3873 92.729 13.658 92.8877 13.882C93.0463 14.106 93.289 14.358 93.6157 14.638C93.8957 14.89 94.1243 15.1187 94.3017 15.324C94.4883 15.5293 94.647 15.7907 94.7777 16.108C94.9083 16.4253 94.9737 16.7987 94.9737 17.228C94.983 17.8533 94.8383 18.3853 94.5397 18.824C94.2503 19.2533 93.8537 19.58 93.3497 19.804C92.8457 20.028 92.2857 20.14 91.6697 20.14C91.0443 20.14 90.4797 20.0187 89.9757 19.776C89.481 19.524 89.089 19.1693 88.7997 18.712C88.5103 18.2453 88.3657 17.7087 88.3657 17.102C88.3657 16.8407 88.403 16.5373 88.4777 16.192L90.3957 16.262C90.3583 16.5607 90.3397 16.7987 90.3397 16.976C90.3397 17.4333 90.4563 17.8067 90.6897 18.096C90.9323 18.3853 91.259 18.53 91.6697 18.53C92.0897 18.53 92.421 18.418 92.6637 18.194C92.9063 17.97 93.0323 17.648 93.0417 17.228C93.0417 16.9107 92.9577 16.6493 92.7897 16.444C92.631 16.2293 92.379 15.9773 92.0337 15.688C91.7257 15.436 91.4783 15.2073 91.2917 15.002C91.105 14.7967 90.951 14.5353 90.8297 14.218C90.7083 13.9007 90.6617 13.518 90.6897 13.07H92.6497ZM101.041 12.104L99.6268 13.126L98.7308\"\r\n              fill=\"white\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <div className=\"Rectangle13\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterButton;\r\n","C:\\Users\\Zura\\OneDrive\\Desktop\\Fourth Semester\\Scripting Languages\\MyAuto\\src\\Components\\Filters\\CombinedFilter.tsx",["127","128","129","130","131","132","133","134","135","136"],[],"import React, { useEffect, useState } from \"react\";\r\nimport FiltersInterface from \"../Interfaces/FiltersInterface\";\r\nimport { ManufacturerInterface } from \"../Interfaces/ManufacturerInterface\";\r\nimport { ProductInterface } from \"../Interfaces/ProductInterface\";\r\nimport { CarTypeInterface } from \"../Interfaces/CarTypeInterface\";\r\nimport { modelInterface } from \"../Interfaces/ModelInterface\";\r\n\r\nconst CombinedFilter = (\r\n  Products: ProductInterface[],\r\n  DealType:string,\r\n  AllManufacturers: ManufacturerInterface[],\r\n  AllModels: modelInterface[],\r\n  Manufacturer: string[],\r\n  Model: string[],\r\n  Category: string[],\r\n  Cartegory: number,\r\n  PriceRange: [number, number],\r\n  allCategories: CarTypeInterface[]\r\n): ProductInterface[] => {\r\n  \r\n\r\n\r\n  const findManId = (id: string): string => {\r\n    let res: string = \"\";\r\n    AllManufacturers.forEach((e) => {\r\n      if (e.man_id == id) res = e.man_name;\r\n    });\r\n\r\n    return res;\r\n  };\r\n  const findModId = (id: number): string => {\r\n    let res: string = \"\";\r\n    AllModels.forEach((e) => {\r\n      if (e.model_id == id) res = e.model_name;\r\n    });\r\n    return res;\r\n  };\r\n\r\n\r\n  const findCatId = (id: number): string => {\r\n    let res: string = \"\";\r\n    allCategories.forEach((e) => {\r\n      if (e.category_id == id) {res = e.seo_title};\r\n    });\r\n\r\n    return res;\r\n  };\r\n\r\n  \r\n  \r\n\r\n  const filterProducts = (products: ProductInterface[]): ProductInterface[] => {\r\n    return products.filter((product) => {\r\n      if (product.vehicle_type != Cartegory) {\r\n        return false;\r\n      }\r\n\r\n      if (\r\n        Manufacturer.length > 0 &&\r\n        !Manufacturer.includes(findManId(String(product.man_id)))\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      \r\n        if(DealType === \"ქირავდება\" && product.for_rent != true){\r\n          return false;\r\n        }\r\n        if(DealType === \"იყიდება\" && product.for_rent != false){\r\n          return false;\r\n        }\r\n      \r\n\r\n      if (Model.length > 0 && !Model.includes(findModId(product.model_id))) {\r\n        return false;\r\n      }\r\n\r\n      // Filter by category name\r\n      if (\r\n        Category.length > 0 &&\r\n        !Category.includes(findCatId(product.category_id))\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Filter by price range\r\n      if (\r\n        PriceRange &&\r\n        (product.price_value < PriceRange[0] || product.price_value > PriceRange[1])\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n\r\n\r\n      // All filters pass, include the product\r\n      return true;\r\n    });\r\n  };\r\n\r\n  // Call the filterProducts function with the Products array\r\n  const filteredProducts = filterProducts(Products);\r\n\r\n  return filteredProducts;\r\n};\r\n\r\nexport default CombinedFilter;\r\n",{"ruleId":"137","severity":1,"message":"138","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":27},{"ruleId":"137","severity":1,"message":"141","line":38,"column":10,"nodeType":"139","messageId":"140","endLine":38,"endColumn":29},{"ruleId":"137","severity":1,"message":"142","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":13},{"ruleId":"137","severity":1,"message":"143","line":10,"column":10,"nodeType":"139","messageId":"140","endLine":10,"endColumn":24},{"ruleId":"137","severity":1,"message":"144","line":43,"column":19,"nodeType":"139","messageId":"140","endLine":43,"endColumn":30},{"ruleId":"145","severity":1,"message":"146","line":70,"column":54,"nodeType":"147","messageId":"148","endLine":70,"endColumn":56},{"ruleId":"149","severity":1,"message":"150","line":87,"column":5,"nodeType":"151","endLine":87,"endColumn":31,"suggestions":"152"},{"ruleId":"137","severity":1,"message":"153","line":89,"column":9,"nodeType":"139","messageId":"140","endLine":89,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":364,"column":33,"nodeType":"147","messageId":"148","endLine":364,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":690,"column":35,"nodeType":"147","messageId":"148","endLine":690,"endColumn":37},{"ruleId":"137","severity":1,"message":"154","line":7,"column":9,"nodeType":"139","messageId":"140","endLine":7,"endColumn":20},{"ruleId":"137","severity":1,"message":"155","line":17,"column":10,"nodeType":"139","messageId":"140","endLine":17,"endColumn":21},{"ruleId":"149","severity":1,"message":"156","line":76,"column":6,"nodeType":"151","endLine":76,"endColumn":20,"suggestions":"157"},{"ruleId":"149","severity":1,"message":"158","line":117,"column":6,"nodeType":"151","endLine":117,"endColumn":18,"suggestions":"159"},{"ruleId":"137","severity":1,"message":"160","line":9,"column":22,"nodeType":"139","messageId":"140","endLine":9,"endColumn":34},{"ruleId":"137","severity":1,"message":"161","line":13,"column":11,"nodeType":"139","messageId":"140","endLine":13,"endColumn":27},{"ruleId":"137","severity":1,"message":"162","line":13,"column":29,"nodeType":"139","messageId":"140","endLine":13,"endColumn":48},{"ruleId":"137","severity":1,"message":"163","line":22,"column":23,"nodeType":"139","messageId":"140","endLine":22,"endColumn":37},{"ruleId":"149","severity":1,"message":"164","line":66,"column":6,"nodeType":"151","endLine":66,"endColumn":8,"suggestions":"165"},{"ruleId":"149","severity":1,"message":"166","line":80,"column":6,"nodeType":"151","endLine":80,"endColumn":44,"suggestions":"167"},{"ruleId":"137","severity":1,"message":"168","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"169","line":7,"column":23,"nodeType":"139","messageId":"140","endLine":7,"endColumn":36},{"ruleId":"149","severity":1,"message":"170","line":16,"column":6,"nodeType":"151","endLine":16,"endColumn":24,"suggestions":"171"},{"ruleId":"137","severity":1,"message":"172","line":9,"column":11,"nodeType":"139","messageId":"140","endLine":9,"endColumn":21},{"ruleId":"137","severity":1,"message":"173","line":10,"column":11,"nodeType":"139","messageId":"140","endLine":10,"endColumn":22},{"ruleId":"145","severity":1,"message":"146","line":18,"column":60,"nodeType":"147","messageId":"148","endLine":18,"endColumn":62},{"ruleId":"149","severity":1,"message":"174","line":20,"column":6,"nodeType":"151","endLine":20,"endColumn":8,"suggestions":"175"},{"ruleId":"145","severity":1,"message":"146","line":29,"column":30,"nodeType":"147","messageId":"148","endLine":29,"endColumn":32},{"ruleId":"149","severity":1,"message":"176","line":36,"column":6,"nodeType":"151","endLine":36,"endColumn":17,"suggestions":"177"},{"ruleId":"137","severity":1,"message":"178","line":12,"column":21,"nodeType":"139","messageId":"140","endLine":12,"endColumn":32},{"ruleId":"137","severity":1,"message":"172","line":13,"column":11,"nodeType":"139","messageId":"140","endLine":13,"endColumn":21},{"ruleId":"137","severity":1,"message":"179","line":13,"column":23,"nodeType":"139","messageId":"140","endLine":13,"endColumn":36},{"ruleId":"149","severity":1,"message":"170","line":21,"column":6,"nodeType":"151","endLine":21,"endColumn":19,"suggestions":"180"},{"ruleId":"137","severity":1,"message":"181","line":9,"column":11,"nodeType":"139","messageId":"140","endLine":9,"endColumn":21},{"ruleId":"149","severity":1,"message":"182","line":15,"column":6,"nodeType":"151","endLine":15,"endColumn":26,"suggestions":"183"},{"ruleId":"137","severity":1,"message":"184","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":27},{"ruleId":"137","severity":1,"message":"185","line":1,"column":29,"nodeType":"139","messageId":"140","endLine":1,"endColumn":38},{"ruleId":"137","severity":1,"message":"186","line":1,"column":40,"nodeType":"139","messageId":"140","endLine":1,"endColumn":48},{"ruleId":"137","severity":1,"message":"187","line":14,"column":5,"nodeType":"139","messageId":"140","endLine":14,"endColumn":13},{"ruleId":"137","severity":1,"message":"155","line":26,"column":5,"nodeType":"139","messageId":"140","endLine":26,"endColumn":16},{"ruleId":"137","severity":1,"message":"168","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"185","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"186","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"188","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":24},{"ruleId":"145","severity":1,"message":"146","line":26,"column":20,"nodeType":"147","messageId":"148","endLine":26,"endColumn":22},{"ruleId":"145","severity":1,"message":"146","line":34,"column":22,"nodeType":"147","messageId":"148","endLine":34,"endColumn":24},{"ruleId":"145","severity":1,"message":"146","line":43,"column":25,"nodeType":"147","messageId":"148","endLine":43,"endColumn":27},{"ruleId":"145","severity":1,"message":"189","line":54,"column":32,"nodeType":"147","messageId":"148","endLine":54,"endColumn":34},{"ruleId":"145","severity":1,"message":"189","line":66,"column":57,"nodeType":"147","messageId":"148","endLine":66,"endColumn":59},{"ruleId":"145","severity":1,"message":"189","line":69,"column":55,"nodeType":"147","messageId":"148","endLine":69,"endColumn":57},"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'fetchedProductCount' is assigned a value but never used.","'axios' is defined but never used.","'modelInterface' is defined but never used.","'setProducts' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product.car_id'. Either include it or remove the dependency array. If 'setModel' needs the current value of 'product.car_id', you can also switch to useReducer instead of useState and read 'product.car_id' in the reducer.","ArrayExpression",["190"],"'imageLink' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'visibleProd' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'products' and 'setVisible'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has missing dependencies: 'filtData', 'setProducts', and 'setVisible'. Either include them or remove the dependency array.",["192"],"'setCartegory' is assigned a value but never used.","'chosenCategories' is assigned a value but never used.","'setChosenCategories' is assigned a value but never used.","'setPlaceholder' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'manArr'. Either include it or remove the dependency array.",["193"],"React Hook useEffect has missing dependencies: 'setManArr' and 'wholeManufacturers'. Either include them or remove the dependency array.",["194"],"'React' is defined but never used.","'setCategories' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateCheckboxStates'. Either include it or remove the dependency array.",["195"],"'currentMan' is assigned a value but never used.","'chosenModel' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'categories' and 'setCategories'. Either include them or remove the dependency array.",["196"],"React Hook useEffect has missing dependencies: 'setCategories', 'setChosen', 'setCurrentMan', and 'wholeCategories'. Either include them or remove the dependency array.",["197"],"'setModelArr' is assigned a value but never used.","'setCurrentMan' is assigned a value but never used.",["198"],"'PriceRange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setPriceRange'. Either include it or remove the dependency array.",["199"],"'CategoryInterface' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'products' is assigned a value but never used.","'FiltersInterface' is defined but never used.","Expected '!==' and instead saw '!='.",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [product.car_id, products, products.length]",{"range":"220","text":"221"},"Update the dependencies array to be: [filterMethod, products, setVisible]",{"range":"222","text":"223"},"Update the dependencies array to be: [filtData, setProducts, setVisible, sortMethod]",{"range":"224","text":"225"},"Update the dependencies array to be: [manArr]",{"range":"226","text":"227"},"Update the dependencies array to be: [cartegory, setManArr, wholeManufacturers, wholeManufacturers.length]",{"range":"228","text":"229"},"Update the dependencies array to be: [chosenCategories, updateCheckboxStates]",{"range":"230","text":"231"},"Update the dependencies array to be: [categories, setCategories]",{"range":"232","text":"233"},"Update the dependencies array to be: [cartegory, setCategories, setChosen, setCurrentMan, wholeCategories]",{"range":"234","text":"235"},"Update the dependencies array to be: [chosenModel, updateCheckboxStates]",{"range":"236","text":"237"},"Update the dependencies array to be: [minPrice, maxPrice, setPriceRange]",{"range":"238","text":"239"},[2529,2555],"[product.car_id, products, products.length]",[2769,2783],"[filterMethod, products, setVisible]",[4252,4264],"[filtData, setProducts, setVisible, sortMethod]",[2201,2203],"[manArr]",[2718,2756],"[cartegory, setManArr, wholeManufacturers, wholeManufacturers.length]",[623,641],"[chosenCategories, updateCheckboxStates]",[774,776],"[categories, setCategories]",[1132,1143],"[cartegory, setCategories, setChosen, setCurrentMan, wholeCategories]",[660,673],"[chosenModel, updateCheckboxStates]",[508,528],"[minPrice, maxPrice, setPriceRange]"]