{"ast":null,"code":"const CombinedFilter = (Products, AllManufacturers, AllModels, Manufacturer, Model, Category, PriceRange, allCategories) => {\n  const findManId = id => {\n    let res = \"\";\n    AllManufacturers.forEach(e => {\n      if (e.man_id == id) res = e.man_name;\n    });\n    return res;\n  };\n  const findModId = id => {\n    let res = \"\";\n    AllModels.forEach(e => {\n      if (e.model_id == id) res = e.model_name;\n    });\n    return res;\n  };\n  const findCatId = id => {\n    let res = \"\";\n    allCategories.forEach(e => {\n      if (e.category_id == id) res = e.seo_title;\n    });\n    return res;\n  };\n  const filterProducts = products => {\n    return products.filter(product => {\n      // Filter by manufacturer name\n      if (Manufacturer.length > 0 && !Manufacturer.includes(findManId(String(product.man_id)))) {\n        return false;\n      }\n\n      // Filter by model name\n      if (Model.length > 0 && !Model.includes(findModId(product.model_id))) {\n        return false;\n      }\n\n      // Filter by category name\n      if (Category.length > 0 && !Category.includes(findCatId(product.category_id))) {\n        return false;\n      }\n\n      // Filter by price range\n      if (PriceRange && (product.price < PriceRange[0] || product.price > PriceRange[1])) {\n        return false;\n      }\n\n      // All filters pass, include the product\n      return true;\n    });\n  };\n\n  // Call the filterProducts function with the Products array\n  const filteredProducts = filterProducts(Products);\n  return filteredProducts;\n};\n_c = CombinedFilter;\nexport default CombinedFilter;\nvar _c;\n$RefreshReg$(_c, \"CombinedFilter\");","map":{"version":3,"names":["CombinedFilter","Products","AllManufacturers","AllModels","Manufacturer","Model","Category","PriceRange","allCategories","findManId","id","res","forEach","e","man_id","man_name","findModId","model_id","model_name","findCatId","category_id","seo_title","filterProducts","products","filter","product","length","includes","String","price","filteredProducts","_c","$RefreshReg$"],"sources":["C:/Users/Zura/OneDrive/Desktop/myauto/src/Components/Filters/CombinedFilter.tsx"],"sourcesContent":["import React from \"react\";\r\nimport FiltersInterface from \"../Interfaces/FiltersInterface\";\r\nimport { ManufacturerInterface } from \"../Interfaces/ManufacturerInterface\";\r\nimport { ProductInterface } from \"../Interfaces/ProductInterface\";\r\nimport { CarTypeInterface } from \"../Interfaces/CarTypeInterface\";\r\nimport { modelInterface } from \"../Interfaces/ModelInterface\";\r\n\r\nconst CombinedFilter = (\r\n  Products: ProductInterface[],\r\n  AllManufacturers: ManufacturerInterface[],\r\n  AllModels: modelInterface[],\r\n  Manufacturer: string[],\r\n  Model: string[],\r\n  Category: string[],\r\n  PriceRange: [number, number],\r\n  allCategories: CarTypeInterface[]\r\n): ProductInterface[] => {\r\n  const findManId = (id: string): string => {\r\n    let res: string = \"\";\r\n    AllManufacturers.forEach((e) => {\r\n      if (e.man_id == id) res = e.man_name;\r\n    });\r\n\r\n    return res;\r\n  };\r\n  const findModId = (id: number): string => {\r\n    let res: string = \"\";\r\n    AllModels.forEach((e) => {\r\n      if (e.model_id == id) res = e.model_name;\r\n    });\r\n    return res;\r\n  };\r\n  const findCatId = (id: number): string => {\r\n    let res: string = \"\";\r\n    allCategories.forEach((e) => {\r\n      if (e.category_id == id) res = e.seo_title;\r\n    });\r\n    return res;\r\n  };\r\n\r\n  const filterProducts = (products: ProductInterface[]): ProductInterface[] => {\r\n    return products.filter((product) => {\r\n      // Filter by manufacturer name\r\n      if (\r\n        Manufacturer.length > 0 &&\r\n        !Manufacturer.includes(findManId(String(product.man_id)))\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Filter by model name\r\n      if (Model.length > 0 && !Model.includes(findModId(product.model_id))) {\r\n        return false;\r\n      }\r\n\r\n      // Filter by category name\r\n      if (\r\n        Category.length > 0 &&\r\n        !Category.includes(findCatId(product.category_id))\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // Filter by price range\r\n      if (\r\n        PriceRange &&\r\n        (product.price < PriceRange[0] || product.price > PriceRange[1])\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // All filters pass, include the product\r\n      return true;\r\n    });\r\n  };\r\n\r\n  // Call the filterProducts function with the Products array\r\n  const filteredProducts = filterProducts(Products);\r\n\r\n  return filteredProducts;\r\n};\r\n\r\nexport default CombinedFilter;\r\n"],"mappings":"AAOA,MAAMA,cAAc,GAAGA,CACrBC,QAA4B,EAC5BC,gBAAyC,EACzCC,SAA2B,EAC3BC,YAAsB,EACtBC,KAAe,EACfC,QAAkB,EAClBC,UAA4B,EAC5BC,aAAiC,KACV;EACvB,MAAMC,SAAS,GAAIC,EAAU,IAAa;IACxC,IAAIC,GAAW,GAAG,EAAE;IACpBT,gBAAgB,CAACU,OAAO,CAAEC,CAAC,IAAK;MAC9B,IAAIA,CAAC,CAACC,MAAM,IAAIJ,EAAE,EAAEC,GAAG,GAAGE,CAAC,CAACE,QAAQ;IACtC,CAAC,CAAC;IAEF,OAAOJ,GAAG;EACZ,CAAC;EACD,MAAMK,SAAS,GAAIN,EAAU,IAAa;IACxC,IAAIC,GAAW,GAAG,EAAE;IACpBR,SAAS,CAACS,OAAO,CAAEC,CAAC,IAAK;MACvB,IAAIA,CAAC,CAACI,QAAQ,IAAIP,EAAE,EAAEC,GAAG,GAAGE,CAAC,CAACK,UAAU;IAC1C,CAAC,CAAC;IACF,OAAOP,GAAG;EACZ,CAAC;EACD,MAAMQ,SAAS,GAAIT,EAAU,IAAa;IACxC,IAAIC,GAAW,GAAG,EAAE;IACpBH,aAAa,CAACI,OAAO,CAAEC,CAAC,IAAK;MAC3B,IAAIA,CAAC,CAACO,WAAW,IAAIV,EAAE,EAAEC,GAAG,GAAGE,CAAC,CAACQ,SAAS;IAC5C,CAAC,CAAC;IACF,OAAOV,GAAG;EACZ,CAAC;EAED,MAAMW,cAAc,GAAIC,QAA4B,IAAyB;IAC3E,OAAOA,QAAQ,CAACC,MAAM,CAAEC,OAAO,IAAK;MAClC;MACA,IACErB,YAAY,CAACsB,MAAM,GAAG,CAAC,IACvB,CAACtB,YAAY,CAACuB,QAAQ,CAAClB,SAAS,CAACmB,MAAM,CAACH,OAAO,CAACX,MAAM,CAAC,CAAC,CAAC,EACzD;QACA,OAAO,KAAK;MACd;;MAEA;MACA,IAAIT,KAAK,CAACqB,MAAM,GAAG,CAAC,IAAI,CAACrB,KAAK,CAACsB,QAAQ,CAACX,SAAS,CAACS,OAAO,CAACR,QAAQ,CAAC,CAAC,EAAE;QACpE,OAAO,KAAK;MACd;;MAEA;MACA,IACEX,QAAQ,CAACoB,MAAM,GAAG,CAAC,IACnB,CAACpB,QAAQ,CAACqB,QAAQ,CAACR,SAAS,CAACM,OAAO,CAACL,WAAW,CAAC,CAAC,EAClD;QACA,OAAO,KAAK;MACd;;MAEA;MACA,IACEb,UAAU,KACTkB,OAAO,CAACI,KAAK,GAAGtB,UAAU,CAAC,CAAC,CAAC,IAAIkB,OAAO,CAACI,KAAK,GAAGtB,UAAU,CAAC,CAAC,CAAC,CAAC,EAChE;QACA,OAAO,KAAK;MACd;;MAEA;MACA,OAAO,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMuB,gBAAgB,GAAGR,cAAc,CAACrB,QAAQ,CAAC;EAEjD,OAAO6B,gBAAgB;AACzB,CAAC;AAACC,EAAA,GAzEI/B,cAAc;AA2EpB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}