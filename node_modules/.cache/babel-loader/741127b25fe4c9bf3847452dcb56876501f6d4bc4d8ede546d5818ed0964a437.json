{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zura\\\\OneDrive\\\\Desktop\\\\myauto\\\\src\\\\Components\\\\Filters\\\\Category.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport CarTypeContext from \"../CarTypes/CarTypeContext\";\nimport \"./Category.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = () => {\n  _s();\n  const {\n    categories,\n    setCategories\n  } = useContext(CarTypeContext);\n  const {\n    chosenCategories,\n    setChosenCategories\n  } = useContext(CarTypeContext);\n  const [droppedCat, setDroppedCat] = useState(false);\n  useEffect(() => {\n    // Update checkbox states when chosenCategories changes\n    updateCheckboxStates();\n  }, [chosenCategories]);\n  const handleChangeCat = event => {\n    const checkboxValue = event.target.value;\n    if (event.target.checked) {\n      setChosenCategories([...chosenCategories, checkboxValue]);\n    } else {\n      const updatedCategor = chosenCategories.filter(val => val !== checkboxValue);\n      setChosenCategories(updatedCategor);\n    }\n  };\n  const showDropdownCat = () => {\n    setDroppedCat(true);\n  };\n  const handleBlurCat = () => {\n    setDroppedCat(false);\n  };\n  const handleCheckboxMouseDown = event => {\n    event.preventDefault();\n  };\n  const resetVal = () => {\n    setChosenCategories([]);\n    updateCheckboxStates();\n  };\n  const updateCheckboxStates = () => {\n    const checkboxes = document.querySelectorAll('input[type=\"checkbox\"][name^=\"category_\"]');\n    checkboxes.forEach(checkbox => {\n      const inputCheckbox = checkbox;\n      inputCheckbox.checked = chosenCategories.includes(inputCheckbox.value);\n    });\n  };\n  const convertToGeorgianAlphabet = latinString => {\n    const latinToGeorgianMap = {\n      a: \"ა\",\n      b: \"ბ\",\n      c: \"ც\",\n      d: \"დ\",\n      e: \"ე\",\n      f: \"ფ\",\n      g: \"გ\",\n      h: \"ჰ\",\n      i: \"ი\",\n      j: \"ჯ\",\n      k: \"კ\",\n      l: \"ლ\",\n      m: \"მ\",\n      n: \"ნ\",\n      o: \"ო\",\n      p: \"პ\",\n      q: \"ქ\",\n      r: \"რ\",\n      s: \"ს\",\n      t: \"ტ\",\n      u: \"უ\",\n      v: \"ვ\",\n      w: \"წ\",\n      x: \"ხ\",\n      y: \"ყ\",\n      z: \"ზ\",\n      sh: \"შ\"\n    };\n    const georgianString = Array.from(latinString).map(char => latinToGeorgianMap[char] || char).join(\"\");\n    return georgianString;\n  };\n  const getPlaceholderText = () => {\n    if (chosenCategories.length === 0) {\n      return \"კატეგორია\";\n    } else {\n      const georgianCategories = chosenCategories.map(category => convertToGeorgianAlphabet(category));\n      return georgianCategories.join(\", \");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-relative\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      tabIndex: 0,\n      onFocus: showDropdownCat,\n      onBlur: handleBlurCat,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control border-1\",\n          type: \"text\",\n          placeholder: getPlaceholderText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn  input-group-append\",\n          onClick: resetVal,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: droppedCat ? \"checkbox-container3\" : \"checkbox-container3 d-none\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scrollable-checkbox2\",\n          children: categories.map(cat => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-check-input\",\n                type: \"checkbox\",\n                name: `category_${cat.seo_title}`,\n                onMouseDown: handleCheckboxMouseDown,\n                value: cat.seo_title,\n                onChange: handleChangeCat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label w-100\",\n                htmlFor: `category_${cat.seo_title}`,\n                children: cat.seo_title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)]\n            }, cat.seo_title, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(Category, \"17itU58vbuXS4pCeDfZm/Jx7zd4=\");\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","useState","useEffect","useContext","CarTypeContext","jsxDEV","_jsxDEV","Category","_s","categories","setCategories","chosenCategories","setChosenCategories","droppedCat","setDroppedCat","updateCheckboxStates","handleChangeCat","event","checkboxValue","target","value","checked","updatedCategor","filter","val","showDropdownCat","handleBlurCat","handleCheckboxMouseDown","preventDefault","resetVal","checkboxes","document","querySelectorAll","forEach","checkbox","inputCheckbox","includes","convertToGeorgianAlphabet","latinString","latinToGeorgianMap","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","sh","georgianString","Array","from","map","char","join","getPlaceholderText","length","georgianCategories","category","className","children","tabIndex","onFocus","onBlur","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","cat","name","seo_title","onMouseDown","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Zura/OneDrive/Desktop/myauto/src/Components/Filters/Category.tsx"],"sourcesContent":["import React, { ChangeEvent, useState, useEffect } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport CarTypeContext from \"../CarTypes/CarTypeContext\";\r\nimport \"./Category.css\";\r\n\r\nconst Category: React.FC = () => {\r\n  const { categories, setCategories } = useContext(CarTypeContext);\r\n  const { chosenCategories, setChosenCategories } = useContext(CarTypeContext);\r\n  const [droppedCat, setDroppedCat] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    // Update checkbox states when chosenCategories changes\r\n    updateCheckboxStates();\r\n  }, [chosenCategories]);\r\n\r\n  const handleChangeCat = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    const checkboxValue = event.target.value;\r\n    if (event.target.checked) {\r\n      setChosenCategories([...chosenCategories, checkboxValue]);\r\n    } else {\r\n      const updatedCategor = chosenCategories.filter(\r\n        (val) => val !== checkboxValue\r\n      );\r\n      setChosenCategories(updatedCategor);\r\n    }\r\n  };\r\n\r\n  const showDropdownCat = (): void => {\r\n    setDroppedCat(true);\r\n  };\r\n\r\n  const handleBlurCat = (): void => {\r\n    setDroppedCat(false);\r\n  };\r\n\r\n  const handleCheckboxMouseDown = (\r\n    event: React.MouseEvent<HTMLInputElement>\r\n  ): void => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const resetVal = (): void => {\r\n    setChosenCategories([]);\r\n    updateCheckboxStates();\r\n  };\r\n\r\n  const updateCheckboxStates = (): void => {\r\n    const checkboxes = document.querySelectorAll<HTMLInputElement>(\r\n      'input[type=\"checkbox\"][name^=\"category_\"]'\r\n    );\r\n    checkboxes.forEach((checkbox) => {\r\n      const inputCheckbox = checkbox as HTMLInputElement;\r\n      inputCheckbox.checked = chosenCategories.includes(inputCheckbox.value);\r\n    });\r\n  };\r\n  const convertToGeorgianAlphabet = (latinString: string): string => {\r\n    const latinToGeorgianMap: { [key: string]: string } = {\r\n      a: \"ა\",\r\n      b: \"ბ\",\r\n      c: \"ც\",\r\n      d: \"დ\",\r\n      e: \"ე\",\r\n      f: \"ფ\",\r\n      g: \"გ\",\r\n      h: \"ჰ\",\r\n      i: \"ი\",\r\n      j: \"ჯ\",\r\n      k: \"კ\",\r\n      l: \"ლ\",\r\n      m: \"მ\",\r\n      n: \"ნ\",\r\n      o: \"ო\",\r\n      p: \"პ\",\r\n      q: \"ქ\",\r\n      r: \"რ\",\r\n      s: \"ს\",\r\n      t: \"ტ\",\r\n      u: \"უ\",\r\n      v: \"ვ\",\r\n      w: \"წ\",\r\n      x: \"ხ\",\r\n      y: \"ყ\",\r\n      z: \"ზ\",\r\n      sh: \"შ\",\r\n    };\r\n\r\n    const georgianString = Array.from(latinString)\r\n      .map((char) => latinToGeorgianMap[char] || char)\r\n      .join(\"\");\r\n\r\n    return georgianString;\r\n  };\r\n\r\n  const getPlaceholderText = (): string => {\r\n    if (chosenCategories.length === 0) {\r\n      return \"კატეგორია\";\r\n    } else {\r\n      const georgianCategories = chosenCategories.map((category) =>\r\n        convertToGeorgianAlphabet(category)\r\n      );\r\n      return georgianCategories.join(\", \");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"position-relative\">\r\n      <div tabIndex={0} onFocus={showDropdownCat} onBlur={handleBlurCat}>\r\n        <div className=\"input-group\">\r\n          <input\r\n            className=\"form-control border-1\"\r\n            type=\"text\"\r\n            placeholder={getPlaceholderText()}\r\n          />\r\n          <button className=\"btn  input-group-append\" onClick={resetVal}>\r\n            X\r\n          </button>\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            droppedCat ? \"checkbox-container3\" : \"checkbox-container3 d-none\"\r\n          }\r\n        >\r\n          <div className=\"scrollable-checkbox2\">\r\n            {categories.map((cat) => {\r\n              return (\r\n                <div className=\"form-check\" key={cat.seo_title}>\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    name={`category_${cat.seo_title}`}\r\n                    onMouseDown={handleCheckboxMouseDown}\r\n                    value={cat.seo_title}\r\n                    onChange={handleChangeCat}\r\n                  />\r\n                  <label\r\n                    className=\"form-check-label w-100\"\r\n                    htmlFor={`category_${cat.seo_title}`}\r\n                  >\r\n                    {cat.seo_title}\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}