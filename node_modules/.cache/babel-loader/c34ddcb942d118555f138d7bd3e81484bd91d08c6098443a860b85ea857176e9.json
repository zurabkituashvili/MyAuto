{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zura\\\\OneDrive\\\\Desktop\\\\myauto\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CarTypeContext from './Components/CarTypeContext';\nimport CarTypeComp from './Components/CarTypeComp';\nimport ModelInp from './Components/ModelInp';\nimport Manufacturer from './Components/Manufacturer';\n// interface Category {\n//   category_id: number;\n//   category_type: number;\n//   has_icon: number;\n//   title: string;\n//   seo_title: string;\n//   vehicle_types: number[];\n\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [cartegory, setCartegory] = useState(0);\n  const [manArr, setManArr] = useState([]);\n  const [currentMan, setCurrentMan] = useState([]);\n\n  //should get man id and then fetch from \n  const [modelArr, setModelArr] = useState([]);\n  const [chosenModel, setChosen] = useState(0);\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch(\"https://api2.myauto.ge/ka/cats/get\");\n      const data = await response.json();\n      setCategories(data.data);\n    } catch (error) {\n      console.error('Error while fetching categories', error);\n    }\n  };\n  const fetchManufacturers = async () => {\n    try {\n      const response = await fetch(\"https://static.my.ge/myauto/js/mans.json\");\n      const data = await response.json();\n      setManArr(data);\n    } catch (error) {\n      console.error('Error while fetching categories', error);\n    }\n  };\n  useEffect(() => {\n    fetchCategories();\n    fetchManufacturers();\n  }, []);\n\n  // console.log(categories.length)\n  if (categories.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(CarTypeContext.Provider, {\n        value: {\n          categories,\n          setCategories,\n          cartegory,\n          setCartegory,\n          manArr,\n          setManArr,\n          currentMan,\n          setCurrentMan,\n          modelArr,\n          setModelArr,\n          chosenModel,\n          setChosen\n        },\n        children: [/*#__PURE__*/_jsxDEV(CarTypeComp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModelInp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Manufacturer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(App, \"11XaKatCVojVLhouomZHCnUZNPY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CarTypeContext","CarTypeComp","ModelInp","Manufacturer","jsxDEV","_jsxDEV","App","_s","categories","setCategories","cartegory","setCartegory","manArr","setManArr","currentMan","setCurrentMan","modelArr","setModelArr","chosenModel","setChosen","fetchCategories","response","fetch","data","json","error","console","fetchManufacturers","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/Zura/OneDrive/Desktop/myauto/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CarTypeInterface } from './Components/CarTypeInterface';\nimport CarTypeContext from './Components/CarTypeContext';\nimport CarTypeComp from './Components/CarTypeComp';\nimport { ProductInterface } from './Components/Interfaces/ProductInterface';\nimport { ManufacturerInterface } from './Components/Interfaces/ManufacturerInterface';\nimport { modelInterface } from './Components/Interfaces/ModelInterface';\nimport ModelInp from './Components/ModelInp';\nimport Manufacturer from './Components/Manufacturer';\n// interface Category {\n//   category_id: number;\n//   category_type: number;\n//   has_icon: number;\n//   title: string;\n//   seo_title: string;\n//   vehicle_types: number[];\n\n// }\n\n\nconst App: React.FC =()=> {\n  const [categories,setCategories] = useState<CarTypeInterface[]>([]);\n  const [cartegory,setCartegory] = useState<number>(0);\n  \n  const [manArr,setManArr] = useState<ManufacturerInterface[]>([])\n  const [currentMan,setCurrentMan] = useState<ManufacturerInterface[]>([]);\n\n\n  //should get man id and then fetch from \n  const[modelArr,setModelArr] = useState<modelInterface[]>([])\n  const[chosenModel,setChosen] =useState<number>(0)\n\n\n  const fetchCategories = async ():Promise<void> => {\n    try{\n      const response:Response = await fetch(\"https://api2.myauto.ge/ka/cats/get\")\n      const data = await response.json()\n      setCategories(data.data);\n    }catch(error){\n      console.error('Error while fetching categories',error)\n    }\n  }\n\n  const fetchManufacturers = async ():Promise<void>=>{\n    try{\n      const response:Response = await fetch(\"https://static.my.ge/myauto/js/mans.json\")\n      const data = await response.json()\n      setManArr(data);\n    }catch(error){\n      console.error('Error while fetching categories',error)\n    }\n  }\n\n  useEffect(()=>{\n    fetchCategories();\n    fetchManufacturers();\n  },[])\n\n  // console.log(categories.length)\n  if(categories.length===0){\n   return <div>\n      LOADING\n    </div>\n  }else{\n    return (\n      <div className=\"App\">\n        <CarTypeContext.Provider value={{categories,setCategories,cartegory,setCartegory,\n                                        manArr,setManArr,currentMan,setCurrentMan,\n                                        modelArr,setModelArr,chosenModel,setChosen}}>\n          <CarTypeComp></CarTypeComp>\n          <ModelInp></ModelInp>\n          <Manufacturer></Manufacturer>\n        </CarTypeContext.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}