{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zura\\\\OneDrive\\\\Desktop\\\\myauto\\\\src\\\\Components\\\\Manufacturer.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useContext, useState, useEffect } from \"react\";\nimport CarTypeContext from \"./CarTypeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Manufacturer = () => {\n  _s();\n  const {\n    cartegory,\n    setCartegory\n  } = useContext(CarTypeContext);\n  const {\n    manArr,\n    setManArr\n  } = useContext(CarTypeContext);\n  const {\n    currentMan,\n    setCurrentMan\n  } = useContext(CarTypeContext);\n  const [wholeManufacturers, setWholeManufacturers] = useState([]);\n  useEffect(() => {\n    setWholeManufacturers(manArr);\n    console.log(manArr.length);\n  }, []);\n  useEffect(() => {\n    let newManufacturers = [];\n    if (cartegory == 0) {\n      newManufacturers = wholeManufacturers.filter(e => e.is_car == \"1\");\n    } else if (cartegory == 1) {\n      newManufacturers = wholeManufacturers.filter(e => e.is_spec == \"1\");\n    } else if (cartegory == 2) {\n      newManufacturers = wholeManufacturers.filter(e => e.is_moto == \"1\");\n    }\n    if (wholeManufacturers.length > 0) {\n      setManArr(newManufacturers);\n    }\n  }, [cartegory, wholeManufacturers.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"manSelect\",\n      id: \"manSel\",\n      children: manArr.map(man => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: man.man_id,\n        children: man.man_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Manufacturer, \"r5QGY8GLxkmT+dO56FKse6oS7ZI=\");\n_c = Manufacturer;\nexport default Manufacturer;\nvar _c;\n$RefreshReg$(_c, \"Manufacturer\");","map":{"version":3,"names":["React","useContext","useState","useEffect","CarTypeContext","jsxDEV","_jsxDEV","Manufacturer","_s","cartegory","setCartegory","manArr","setManArr","currentMan","setCurrentMan","wholeManufacturers","setWholeManufacturers","console","log","length","newManufacturers","filter","e","is_car","is_spec","is_moto","children","name","id","map","man","value","man_id","man_name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Zura/OneDrive/Desktop/myauto/src/Components/Manufacturer.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport CarTypeContext from \"./CarTypeContext\";\r\nimport { ManufacturerInterface } from \"./Interfaces/ManufacturerInterface\";\r\n\r\nconst Manufacturer: React.FC = () => {\r\n  const { cartegory, setCartegory } = useContext(CarTypeContext);\r\n\r\n  const { manArr, setManArr } = useContext(CarTypeContext);\r\n  const { currentMan, setCurrentMan } = useContext(CarTypeContext);\r\n\r\n  const [wholeManufacturers, setWholeManufacturers] = useState<\r\n    ManufacturerInterface[]\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    setWholeManufacturers(manArr);\r\n    console.log(manArr.length);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let newManufacturers: ManufacturerInterface[] = [];\r\n    if (cartegory == 0) {\r\n      newManufacturers = wholeManufacturers.filter((e) => e.is_car == \"1\");\r\n    } else if (cartegory == 1) {\r\n      newManufacturers = wholeManufacturers.filter((e) => e.is_spec == \"1\");\r\n    } else if (cartegory == 2) {\r\n      newManufacturers = wholeManufacturers.filter((e) => e.is_moto == \"1\");\r\n    }\r\n    if (wholeManufacturers.length > 0) {\r\n      setManArr(newManufacturers);\r\n    }\r\n  }, [cartegory, wholeManufacturers.length]);\r\n\r\n  return (\r\n    <div>\r\n      <select name=\"manSelect\" id=\"manSel\">\r\n        {manArr.map((man) => (\r\n          <option value={man.man_id}>{man.man_name}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Manufacturer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACvD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGT,UAAU,CAACG,cAAc,CAAC;EAE9D,MAAM;IAAEO,MAAM;IAAEC;EAAU,CAAC,GAAGX,UAAU,CAACG,cAAc,CAAC;EACxD,MAAM;IAAES,UAAU;IAAEC;EAAc,CAAC,GAAGb,UAAU,CAACG,cAAc,CAAC;EAEhE,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGd,QAAQ,CAE1D,EAAE,CAAC;EAELC,SAAS,CAAC,MAAM;IACda,qBAAqB,CAACL,MAAM,CAAC;IAC7BM,OAAO,CAACC,GAAG,CAACP,MAAM,CAACQ,MAAM,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACd,IAAIiB,gBAAyC,GAAG,EAAE;IAClD,IAAIX,SAAS,IAAI,CAAC,EAAE;MAClBW,gBAAgB,GAAGL,kBAAkB,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,IAAI,GAAG,CAAC;IACtE,CAAC,MAAM,IAAId,SAAS,IAAI,CAAC,EAAE;MACzBW,gBAAgB,GAAGL,kBAAkB,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACE,OAAO,IAAI,GAAG,CAAC;IACvE,CAAC,MAAM,IAAIf,SAAS,IAAI,CAAC,EAAE;MACzBW,gBAAgB,GAAGL,kBAAkB,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACG,OAAO,IAAI,GAAG,CAAC;IACvE;IACA,IAAIV,kBAAkB,CAACI,MAAM,GAAG,CAAC,EAAE;MACjCP,SAAS,CAACQ,gBAAgB,CAAC;IAC7B;EACF,CAAC,EAAE,CAACX,SAAS,EAAEM,kBAAkB,CAACI,MAAM,CAAC,CAAC;EAE1C,oBACEb,OAAA;IAAAoB,QAAA,eACEpB,OAAA;MAAQqB,IAAI,EAAC,WAAW;MAACC,EAAE,EAAC,QAAQ;MAAAF,QAAA,EACjCf,MAAM,CAACkB,GAAG,CAAEC,GAAG,iBACdxB,OAAA;QAAQyB,KAAK,EAAED,GAAG,CAACE,MAAO;QAAAN,QAAA,EAAEI,GAAG,CAACG;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAtCID,YAAsB;AAAA+B,EAAA,GAAtB/B,YAAsB;AAwC5B,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}