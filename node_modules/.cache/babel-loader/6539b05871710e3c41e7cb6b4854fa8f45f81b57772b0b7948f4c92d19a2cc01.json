{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zura\\\\OneDrive\\\\Desktop\\\\myauto\\\\src\\\\Components\\\\Manufacturer.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useContext, useState, useEffect } from 'react';\nimport CarTypeContext from './CarTypeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Manufacturer = () => {\n  _s();\n  const {\n    cartegory,\n    setCartegory\n  } = useContext(CarTypeContext);\n  const {\n    manArr,\n    setManArr\n  } = useContext(CarTypeContext);\n  const {\n    currentMan,\n    setCurrentMan\n  } = useContext(CarTypeContext);\n  const [wholeManufacturers, setWholeManufacturers] = useState([]);\n  useEffect(() => {\n    setWholeManufacturers(manArr);\n    console.log(manArr.length);\n  }, []);\n  useEffect(() => {\n    let newManufacturers = [];\n    if (cartegory == 0) {\n      newManufacturers = wholeManufacturers.filter(e => e.is_car == \"1\");\n    } else if (cartegory == 1) {\n      newManufacturers = wholeManufacturers.filter(e => e.is_spec == \"1\");\n    } else if (cartegory == 2) {\n      newManufacturers = wholeManufacturers.filter(e => e.is_moto == \"1\");\n    }\n    if (wholeManufacturers.length > 0) {\n      setManArr(newManufacturers);\n    }\n  }, [cartegory, wholeManufacturers.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"\",\n      id: \"\",\n      children: manArr.map(man => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: man.man_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Manufacturer, \"LUhSH1zD0XyLeuMHF15lspI4rzs=\");\n_c = Manufacturer;\nexport default Manufacturer;\nvar _c;\n$RefreshReg$(_c, \"Manufacturer\");","map":{"version":3,"names":["React","useContext","useState","useEffect","CarTypeContext","jsxDEV","_jsxDEV","Manufacturer","_s","cartegory","setCartegory","manArr","setManArr","currentMan","setCurrentMan","wholeManufacturers","setWholeManufacturers","console","log","length","newManufacturers","filter","e","is_car","is_spec","is_moto","children","name","id","map","man","value","man_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Zura/OneDrive/Desktop/myauto/src/Components/Manufacturer.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useContext,useState,useEffect } from 'react';\r\nimport CarTypeContext from './CarTypeContext';\r\nimport { ManufacturerInterface } from './Interfaces/ManufacturerInterface';\r\n\r\n\r\nconst Manufacturer:React.FC = () => {\r\n   \r\n    const {cartegory,setCartegory} = useContext(CarTypeContext)\r\n\r\n\r\n    const{manArr,setManArr} = useContext(CarTypeContext)\r\n    const{currentMan,setCurrentMan} = useContext(CarTypeContext)\r\n\r\n    const [wholeManufacturers,setWholeManufacturers] = useState<ManufacturerInterface[]>([]);\r\n    \r\n    useEffect(()=>{\r\n        setWholeManufacturers(manArr);\r\n        console.log(manArr.length);\r\n    },[])\r\n    \r\n\r\n    useEffect(()=>{\r\n        let newManufacturers:ManufacturerInterface[] = [];\r\n        if(cartegory == 0){\r\n            newManufacturers = wholeManufacturers.filter((e) => e.is_car == \"1\" )\r\n        }else if(cartegory == 1){\r\n            newManufacturers = wholeManufacturers.filter((e) => e.is_spec == \"1\" )\r\n        }else if(cartegory == 2){\r\n            newManufacturers = wholeManufacturers.filter((e) => e.is_moto == \"1\" )\r\n        }\r\n        if(wholeManufacturers.length > 0){\r\n        setManArr(newManufacturers);\r\n        }\r\n    },[cartegory,wholeManufacturers.length])    \r\n\r\n   \r\n    return (\r\n    <div>\r\n        <select name=\"\" id=\"\">\r\n        {manArr.map((man)=> (\r\n            <option value={man.man_id}></option>\r\n        ))}\r\n        </select>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Manufacturer"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAACC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACrD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9C,MAAMC,YAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhC,MAAM;IAACC,SAAS;IAACC;EAAY,CAAC,GAAGT,UAAU,CAACG,cAAc,CAAC;EAG3D,MAAK;IAACO,MAAM;IAACC;EAAS,CAAC,GAAGX,UAAU,CAACG,cAAc,CAAC;EACpD,MAAK;IAACS,UAAU;IAACC;EAAa,CAAC,GAAGb,UAAU,CAACG,cAAc,CAAC;EAE5D,MAAM,CAACW,kBAAkB,EAACC,qBAAqB,CAAC,GAAGd,QAAQ,CAA0B,EAAE,CAAC;EAExFC,SAAS,CAAC,MAAI;IACVa,qBAAqB,CAACL,MAAM,CAAC;IAC7BM,OAAO,CAACC,GAAG,CAACP,MAAM,CAACQ,MAAM,CAAC;EAC9B,CAAC,EAAC,EAAE,CAAC;EAGLhB,SAAS,CAAC,MAAI;IACV,IAAIiB,gBAAwC,GAAG,EAAE;IACjD,IAAGX,SAAS,IAAI,CAAC,EAAC;MACdW,gBAAgB,GAAGL,kBAAkB,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,IAAI,GAAI,CAAC;IACzE,CAAC,MAAK,IAAGd,SAAS,IAAI,CAAC,EAAC;MACpBW,gBAAgB,GAAGL,kBAAkB,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACE,OAAO,IAAI,GAAI,CAAC;IAC1E,CAAC,MAAK,IAAGf,SAAS,IAAI,CAAC,EAAC;MACpBW,gBAAgB,GAAGL,kBAAkB,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACG,OAAO,IAAI,GAAI,CAAC;IAC1E;IACA,IAAGV,kBAAkB,CAACI,MAAM,GAAG,CAAC,EAAC;MACjCP,SAAS,CAACQ,gBAAgB,CAAC;IAC3B;EACJ,CAAC,EAAC,CAACX,SAAS,EAACM,kBAAkB,CAACI,MAAM,CAAC,CAAC;EAGxC,oBACAb,OAAA;IAAAoB,QAAA,eACIpB,OAAA;MAAQqB,IAAI,EAAC,EAAE;MAACC,EAAE,EAAC,EAAE;MAAAF,QAAA,EACpBf,MAAM,CAACkB,GAAG,CAAEC,GAAG,iBACZxB,OAAA;QAAQyB,KAAK,EAAED,GAAG,CAACE;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEV,CAAC;AAAA5B,EAAA,CAzCKD,YAAqB;AAAA8B,EAAA,GAArB9B,YAAqB;AA2C3B,eAAeA,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}