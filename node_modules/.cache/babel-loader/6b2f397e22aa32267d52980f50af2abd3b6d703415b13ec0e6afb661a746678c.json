{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zura\\\\OneDrive\\\\Desktop\\\\myauto\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CarTypeContext from \"./Components/CarTypeContext\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Data/Pages.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// interface Category {\n//   category_id: number;\n//   category_type: number;\n//   has_icon: number;\n//   title: string;\n//   seo_title: string;\n//   vehicle_types: number[];\n// }\nconst App = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [cartegory, setCartegory] = useState(0);\n  const [manArr, setManArr] = useState([]);\n  const [currentMan, setCurrentMan] = useState([]);\n\n  //should get man id and then fetch from\n  const [modelArr, setModelArr] = useState([]);\n  const [chosenModel, setChosen] = useState(0);\n  const [products, setProducts] = useState([]);\n\n  //-------------------------------------------------------//\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n  const totalPage = Math.ceil(products.length / itemsPerPage);\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch(\"https://api2.myauto.ge/ka/cats/get\");\n      const data = await response.json();\n      setCategories(data.data);\n    } catch (error) {\n      console.error(\"Error while fetching categories\", error);\n    }\n  };\n  const fetchManufacturers = async () => {\n    try {\n      const response = await fetch(\"https://static.my.ge/myauto/js/mans.json\");\n      const data = await response.json();\n      setManArr(data);\n    } catch (error) {\n      console.error(\"Error while fetching categories\", error);\n    }\n  };\n  const fetchProducts = async () => {\n    try {\n      let page = 1;\n      let hasMorePages = true;\n      while (hasMorePages && page <= 50) {\n        const response = await fetch(`https://api2.myauto.ge/ka/products/?Page=${page}`);\n        const data = await response.json();\n        if (data.data.items.length > 0) {\n          setProducts(prevProducts => [...prevProducts, ...data.data.items]);\n          page++;\n        } else {\n          hasMorePages = false;\n        }\n      }\n    } catch (error) {\n      console.error(\"Error while fetching products\", error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n    fetchCategories();\n    fetchManufacturers();\n  }, []);\n  const productsToDisplay = products.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  const handlePageClick = pageNum => setCurrentPage(pageNum);\n\n  // console.log(categories.length)\n  if (categories.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(CarTypeContext.Provider, {\n        value: {\n          categories,\n          setCategories,\n          cartegory,\n          setCartegory,\n          manArr,\n          setManArr,\n          currentMan,\n          setCurrentMan,\n          modelArr,\n          setModelArr,\n          chosenModel,\n          setChosen\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(App, \"QDePlsHxwUPAdc7s3WlVYA1n8bE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CarTypeContext","jsxDEV","_jsxDEV","App","_s","categories","setCategories","cartegory","setCartegory","manArr","setManArr","currentMan","setCurrentMan","modelArr","setModelArr","chosenModel","setChosen","products","setProducts","currentPage","setCurrentPage","itemsPerPage","totalPage","Math","ceil","length","fetchCategories","response","fetch","data","json","error","console","fetchManufacturers","fetchProducts","page","hasMorePages","items","prevProducts","productsToDisplay","slice","handlePageClick","pageNum","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/Zura/OneDrive/Desktop/myauto/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { CarTypeInterface } from \"./Components/CarTypeInterface\";\nimport CarTypeContext from \"./Components/CarTypeContext\";\nimport CarTypeComp from \"./Components/CarTypeComp\";\nimport { ProductInterface } from \"./Components/Interfaces/ProductInterface\";\nimport { ManufacturerInterface } from \"./Components/Interfaces/ManufacturerInterface\";\nimport { modelInterface } from \"./Components/Interfaces/ModelInterface\";\nimport ModelInp from \"./Components/ModelInp\";\nimport Manufacturer from \"./Components/Manufacturer\";\nimport ProductComponent from \"./Components/Product\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Data/Pages.css\";\nimport Pagination from \"./Components/Paginations\";\n\n// interface Category {\n//   category_id: number;\n//   category_type: number;\n//   has_icon: number;\n//   title: string;\n//   seo_title: string;\n//   vehicle_types: number[];\n\n// }\n\nconst App: React.FC = () => {\n  const [categories, setCategories] = useState<CarTypeInterface[]>([]);\n  const [cartegory, setCartegory] = useState<number>(0);\n\n  const [manArr, setManArr] = useState<ManufacturerInterface[]>([]);\n  const [currentMan, setCurrentMan] = useState<ManufacturerInterface[]>([]);\n\n  //should get man id and then fetch from\n  const [modelArr, setModelArr] = useState<modelInterface[]>([]);\n  const [chosenModel, setChosen] = useState<number>(0);\n  const [products, setProducts] = useState<ProductInterface[]>([]);\n\n  //-------------------------------------------------------//\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n\n  const totalPage = Math.ceil(products.length / itemsPerPage);\n\n  const fetchCategories = async (): Promise<void> => {\n    try {\n      const response: Response = await fetch(\n        \"https://api2.myauto.ge/ka/cats/get\"\n      );\n      const data = await response.json();\n      setCategories(data.data);\n    } catch (error) {\n      console.error(\"Error while fetching categories\", error);\n    }\n  };\n\n  const fetchManufacturers = async (): Promise<void> => {\n    try {\n      const response: Response = await fetch(\n        \"https://static.my.ge/myauto/js/mans.json\"\n      );\n      const data = await response.json();\n      setManArr(data);\n    } catch (error) {\n      console.error(\"Error while fetching categories\", error);\n    }\n  };\n  const fetchProducts = async (): Promise<void> => {\n    try {\n      let page = 1;\n      let hasMorePages = true;\n\n      while (hasMorePages && page <= 50) {\n        const response: Response = await fetch(\n          `https://api2.myauto.ge/ka/products/?Page=${page}`\n        );\n        const data = await response.json();\n\n        if (data.data.items.length > 0) {\n          setProducts((prevProducts) => [...prevProducts, ...data.data.items]);\n          page++;\n        } else {\n          hasMorePages = false;\n        }\n      }\n    } catch (error) {\n      console.error(\"Error while fetching products\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCategories();\n    fetchManufacturers();\n  }, []);\n\n  const productsToDisplay = products.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  const handlePageClick = (pageNum: number) => setCurrentPage(pageNum);\n\n  // console.log(categories.length)\n  if (categories.length === 0) {\n    return <div>LOADING</div>;\n  } else {\n    return (\n      <div className=\"App\">\n        <CarTypeContext.Provider\n          value={{\n            categories,\n            setCategories,\n            cartegory,\n            setCartegory,\n            manArr,\n            setManArr,\n            currentMan,\n            setCurrentMan,\n            modelArr,\n            setModelArr,\n            chosenModel,\n            setChosen,\n          }}\n        ></CarTypeContext.Provider>\n      </div>\n    );\n  }\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}