{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zura\\\\OneDrive\\\\Desktop\\\\myauto\\\\src\\\\Components\\\\Filters\\\\ModelInp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport CarTypeContext from \"../CarTypes/CarTypeContext\";\nimport \"./ModelInp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModelInp = () => {\n  _s();\n  const {\n    modelArr,\n    setModelArr\n  } = useContext(CarTypeContext);\n  const {\n    currentMan,\n    setCurrentMan\n  } = useContext(CarTypeContext);\n  const {\n    chosenModel,\n    setChosen\n  } = useContext(CarTypeContext);\n  const [droppedModel, setDroppedModel] = useState(false);\n  useEffect(() => {\n    // Update checkbox states when chosenCategories changes\n    updateCheckboxStates();\n  }, [chosenCategories]);\n  const handleChangeMod = event => {\n    const checkboxValue = event.target.value;\n    if (event.target.checked) {\n      setChosen([...chosenModel, checkboxValue]);\n    } else {\n      const updatedModChecks = chosenModel.filter(val => val != checkboxValue);\n      setChosen(updatedModChecks);\n    }\n  };\n  const resetVal = () => {\n    setChosen([]);\n    setDroppedModel(false);\n  };\n  function showDropdownMod() {\n    setDroppedModel(true);\n  }\n  function handleBlurMod() {\n    setDroppedModel(false);\n  }\n  const handleCheckboxMouseDown = event => {\n    event.preventDefault();\n  };\n  const updateCheckboxStates = () => {\n    const checkboxes = document.querySelectorAll('input[type=\"checkbox\"][name^=\"category_\"]');\n    checkboxes.forEach(checkbox => {\n      const inputCheckbox = checkbox;\n      inputCheckbox.checked = chosenModel.includes(inputCheckbox.value);\n    });\n  };\n  const getPlaceholderText = () => {\n    if (chosenModel.length === 0) {\n      return \"მოდელი\";\n    } else {\n      return chosenModel.join(\", \");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      tabIndex: 0,\n      onFocus: showDropdownMod,\n      onBlur: handleBlurMod,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control border-1\",\n          type: \"text\",\n          placeholder: \"\\u10DB\\u10DD\\u10D3\\u10D4\\u10DA\\u10D8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn  input-group-append\",\n          onClick: () => resetVal(),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: droppedModel ? \"checkbox-container2\" : \"checkbox-container2 d-none\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scrollable-checkbox2 border-0 \",\n          children: modelArr.map(model => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input\",\n                  type: \"checkbox\",\n                  name: model.model_name,\n                  onMouseDown: handleCheckboxMouseDown,\n                  value: model.model_name,\n                  onChange: handleChangeMod,\n                  checked: chosenModel.includes(model.model_name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label w-100\",\n                  htmlFor: model.model_name,\n                  children: model.model_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ModelInp, \"tznPchh306Lo2z2j//ovrTH14j4=\");\n_c = ModelInp;\nexport default ModelInp;\nvar _c;\n$RefreshReg$(_c, \"ModelInp\");","map":{"version":3,"names":["React","useContext","useState","CarTypeContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ModelInp","_s","modelArr","setModelArr","currentMan","setCurrentMan","chosenModel","setChosen","droppedModel","setDroppedModel","useEffect","updateCheckboxStates","chosenCategories","handleChangeMod","event","checkboxValue","target","value","checked","updatedModChecks","filter","val","resetVal","showDropdownMod","handleBlurMod","handleCheckboxMouseDown","preventDefault","checkboxes","document","querySelectorAll","forEach","checkbox","inputCheckbox","includes","getPlaceholderText","length","join","children","tabIndex","onFocus","onBlur","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","model","name","model_name","onMouseDown","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Zura/OneDrive/Desktop/myauto/src/Components/Filters/ModelInp.tsx"],"sourcesContent":["import React, { ChangeEvent, useRef, useContext, useState } from \"react\";\r\nimport CarTypeContext from \"../CarTypes/CarTypeContext\";\r\nimport \"./ModelInp.css\";\r\n\r\nconst ModelInp: React.FC = () => {\r\n  const { modelArr, setModelArr } = useContext(CarTypeContext);\r\n  const { currentMan, setCurrentMan } = useContext(CarTypeContext);\r\n  const { chosenModel, setChosen } = useContext(CarTypeContext);\r\n  const [droppedModel, setDroppedModel] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    // Update checkbox states when chosenCategories changes\r\n    updateCheckboxStates();\r\n  }, [chosenCategories]);\r\n\r\n  const handleChangeMod = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    const checkboxValue = event.target.value;\r\n    if (event.target.checked) {\r\n      setChosen([...chosenModel, checkboxValue]);\r\n    } else {\r\n      const updatedModChecks = chosenModel.filter(\r\n        (val) => val != checkboxValue\r\n      );\r\n      setChosen(updatedModChecks);\r\n    }\r\n  };\r\n\r\n  const resetVal = (): void => {\r\n    setChosen([]);\r\n    setDroppedModel(false);\r\n  };\r\n\r\n  function showDropdownMod(): void {\r\n    setDroppedModel(true);\r\n  }\r\n\r\n  function handleBlurMod(): void {\r\n    setDroppedModel(false);\r\n  }\r\n\r\n  const handleCheckboxMouseDown = (\r\n    event: React.MouseEvent<HTMLInputElement>\r\n  ): void => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const updateCheckboxStates = (): void => {\r\n    const checkboxes = document.querySelectorAll<HTMLInputElement>(\r\n      'input[type=\"checkbox\"][name^=\"category_\"]'\r\n    );\r\n    checkboxes.forEach((checkbox) => {\r\n      const inputCheckbox = checkbox as HTMLInputElement;\r\n      inputCheckbox.checked = chosenModel.includes(inputCheckbox.value);\r\n    });\r\n  };\r\n\r\n  const getPlaceholderText = (): string => {\r\n    if (chosenModel.length === 0) {\r\n      return \"მოდელი\";\r\n    } else {\r\n      return chosenModel.join(\", \");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div tabIndex={0} onFocus={showDropdownMod} onBlur={handleBlurMod}>\r\n        <div className=\"input-group\">\r\n          <input\r\n            className=\"form-control border-1\"\r\n            type=\"text\"\r\n            placeholder=\"მოდელი\"\r\n          />\r\n          <button\r\n            className=\"btn  input-group-append\"\r\n            onClick={() => resetVal()}\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n\r\n        {\r\n          <div\r\n            className={\r\n              droppedModel\r\n                ? \"checkbox-container2\"\r\n                : \"checkbox-container2 d-none\"\r\n            }\r\n          >\r\n            <div className={\"scrollable-checkbox2 border-0 \"}>\r\n              {modelArr.map((model) => {\r\n                return (\r\n                  <>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        name={model.model_name}\r\n                        onMouseDown={handleCheckboxMouseDown}\r\n                        value={model.model_name}\r\n                        onChange={handleChangeMod}\r\n                        checked={chosenModel.includes(model.model_name)}\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label w-100\"\r\n                        htmlFor={model.model_name}\r\n                      >\r\n                        {model.model_name}\r\n                      </label>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModelInp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}