{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zura\\\\OneDrive\\\\Desktop\\\\myauto\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CarTypeContext from \"./Components/CarTypeContext\";\nimport ProductComponent from \"./Components/Product\";\n// interface Category {\n//   category_id: number;\n//   category_type: number;\n//   has_icon: number;\n//   title: string;\n//   seo_title: string;\n//   vehicle_types: number[];\n\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [cartegory, setCartegory] = useState(0);\n  const [manArr, setManArr] = useState([]);\n  const [currentMan, setCurrentMan] = useState([]);\n\n  //should get man id and then fetch from\n  const [modelArr, setModelArr] = useState([]);\n  const [chosenModel, setChosen] = useState(0);\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch(\"https://api2.myauto.ge/ka/cats/get\");\n      const data = await response.json();\n      setCategories(data.data);\n    } catch (error) {\n      console.error(\"Error while fetching categories\", error);\n    }\n  };\n  const fetchManufacturers = async () => {\n    try {\n      const response = await fetch(\"https://static.my.ge/myauto/js/mans.json\");\n      const data = await response.json();\n      setManArr(data);\n    } catch (error) {\n      console.error(\"Error while fetching categories\", error);\n    }\n  };\n  useEffect(() => {\n    fetchCategories();\n    fetchManufacturers();\n  }, []);\n\n  // console.log(categories.length)\n  if (categories.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(CarTypeContext.Provider, {\n        value: {\n          categories,\n          setCategories,\n          cartegory,\n          setCartegory,\n          manArr,\n          setManArr,\n          currentMan,\n          setCurrentMan,\n          modelArr,\n          setModelArr,\n          chosenModel,\n          setChosen\n        },\n        children: /*#__PURE__*/_jsxDEV(ProductComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(App, \"7OIA3PQPMBh1Rqbw1zrO3HsqQzs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CarTypeContext","ProductComponent","jsxDEV","_jsxDEV","App","_s","categories","setCategories","cartegory","setCartegory","manArr","setManArr","currentMan","setCurrentMan","modelArr","setModelArr","chosenModel","setChosen","fetchCategories","response","fetch","data","json","error","console","fetchManufacturers","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/Zura/OneDrive/Desktop/myauto/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { CarTypeInterface } from \"./Components/CarTypeInterface\";\nimport CarTypeContext from \"./Components/CarTypeContext\";\nimport CarTypeComp from \"./Components/CarTypeComp\";\nimport { ProductInterface } from \"./Components/Interfaces/ProductInterface\";\nimport { ManufacturerInterface } from \"./Components/Interfaces/ManufacturerInterface\";\nimport { modelInterface } from \"./Components/Interfaces/ModelInterface\";\nimport ModelInp from \"./Components/ModelInp\";\nimport Manufacturer from \"./Components/Manufacturer\";\nimport ProductComponent from \"./Components/Product\";\n// interface Category {\n//   category_id: number;\n//   category_type: number;\n//   has_icon: number;\n//   title: string;\n//   seo_title: string;\n//   vehicle_types: number[];\n\n// }\n\nconst App: React.FC = () => {\n  const [categories, setCategories] = useState<CarTypeInterface[]>([]);\n  const [cartegory, setCartegory] = useState<number>(0);\n\n  const [manArr, setManArr] = useState<ManufacturerInterface[]>([]);\n  const [currentMan, setCurrentMan] = useState<ManufacturerInterface[]>([]);\n\n  //should get man id and then fetch from\n  const [modelArr, setModelArr] = useState<modelInterface[]>([]);\n  const [chosenModel, setChosen] = useState<number>(0);\n\n  const fetchCategories = async (): Promise<void> => {\n    try {\n      const response: Response = await fetch(\n        \"https://api2.myauto.ge/ka/cats/get\"\n      );\n      const data = await response.json();\n      setCategories(data.data);\n    } catch (error) {\n      console.error(\"Error while fetching categories\", error);\n    }\n  };\n\n  const fetchManufacturers = async (): Promise<void> => {\n    try {\n      const response: Response = await fetch(\n        \"https://static.my.ge/myauto/js/mans.json\"\n      );\n      const data = await response.json();\n      setManArr(data);\n    } catch (error) {\n      console.error(\"Error while fetching categories\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCategories();\n    fetchManufacturers();\n  }, []);\n\n  // console.log(categories.length)\n  if (categories.length === 0) {\n    return <div>LOADING</div>;\n  } else {\n    return (\n      <div className=\"App\">\n        <CarTypeContext.Provider\n          value={{\n            categories,\n            setCategories,\n            cartegory,\n            setCartegory,\n            manArr,\n            setManArr,\n            currentMan,\n            setCurrentMan,\n            modelArr,\n            setModelArr,\n            chosenModel,\n            setChosen,\n          }}\n        >\n          {/* <CarTypeComp></CarTypeComp>\n          <ModelInp></ModelInp>\n          <Manufacturer></Manufacturer>\n           */}\n          <ProductComponent />\n        </CarTypeContext.Provider>\n      </div>\n    );\n  }\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}